<h1>About</h1>
<p>課程名稱: 協同產品設計實習 - Collaborative Product Design Practice</p>
<p>學員作業網站: <a href="https://mdecd2025.github.io/hw-zhe41223118/content/index.html">https://mdecd2025.github.io/hw-zhe41223118/</a></p>
<p>學員作業倉儲: <a href="https://github.com/mdecd2025/hw-zhe41223118">https://github.com/mdecd2025/hw-zhe41223118</a></p>
<hr/>
<p>課程代號: cd2025</p>
<p>Teams 線上教學：</p>
<p style="padding-left: 30px;">以 "學號@nfu.edu.tw" 登入<span> </span><a href="https://login.microsoftonline.com/">https://login.microsoftonline.com/</a><span> </span>Office 365</p>
<p style="padding-left: 30px;">Teams 團隊代碼: <span>p5z4eku</span></p>
<hr/>
<p>課程評分:</p>
<p style="padding-left: 30px;">Homework (30%) - 每週至少提交兩次與課程進度有關的內容, 完成後填回自評表單</p>
<p style="padding-left: 30px;">Exam (40%) - 建立包含操作流程影片、心得以及提供檔案下載的網頁後填回自評表單</p>
<p style="padding-left: 30px;">Final Report (30%) - 利用網頁內容進行簡報並提交 pdf 格式書面報告, 完成後填回自評表單</p>
<p></p>
<h1>Integrate</h1>
<p>除了每周上課內容任務外，小組作業個人製作部分，依序整理至此目錄下。</p>
<h2>w1</h2>
<p><span>任務：</span></p>
<p>分組團隊<span style="background-color: #ccffcc;"> (Teams)</span> 建立後，參考<a href="https://mde.tw/cd2025/content/list.html">說明</a>後，將各班各學員與各團隊的倉儲與網站連結，分別放入標題為 list <span style="background-color: #ccffcc;">(使用第一階標題)</span> 的網頁中。</p>
<p></p>
<p><span style="background-color: #ffff99;"><strong>甲乙班學員網站及倉儲整理</strong></span></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">from browser import html, document

# 讀取甲班資料
url = "https://mde.tw/list/2a.txt"
data = open(url).readlines()
all_stud = data[1:]
brython_div1 = document["brython_div1"]
count = 0

# 插入甲班標題
brython_div1 &lt;= html.H3("甲班")

# 顯示甲班的學生資料
for i in all_stud:
    count += 1
    stud = i.split("\t")
    stud_num = stud[0]
    github = stud[1]
    brython_div1 &lt;= str(count) + ". " + html.A(str(stud_num), href="https://mdecd2025.github.io/hw-" + str(github))
    brython_div1 &lt;= " / " + html.A("repo", href="https://github.com/mdecd2025/hw-" + str(github))
    brython_div1 &lt;= html.BR()

# 讀取乙班資料
url = "https://mde.tw/list/2b.txt"
data = open(url).readlines()
all_stud = data[1:]
count = 0

# 插入乙班標題
brython_div1 &lt;= html.H3("乙班")

# 顯示乙班的學生資料
for i in all_stud:
    count += 1
    stud = i.split("\t")
    stud_num = stud[0]
    github = stud[1]
    brython_div1 &lt;= str(count) + ". " + html.A(str(stud_num), href="https://mdecd2025.github.io/hw-" + str(github))
    brython_div1 &lt;= " / " + html.A("repo", href="https://github.com/mdecd2025/hw-" + str(github))
    brython_div1 &lt;= html.BR()
</pre>
<p></p>
<p><strong><span style="background-color: #ffff99;">甲乙兩班團隊網站及倉儲整理</span></strong></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">from browser import document, html

# 顯示甲班標題
brython_div1 = document["brython_div1"]
brython_div1 &lt;= html.H3("甲班")  # 這行會顯示 "甲班" 標題

num = 11
for i in range(num):
    brython_div1 &lt;= str(i+1) + ". " + html.A("2a-ag" + str(i+1), href="https://mdecd2025.github.io/2a-" + "ag" + str(i+1))
    brython_div1 &lt;= " / " + html.A("repo", href="https://github.com/mdecd2025/2a-" + "ag" + str(i+1))
    brython_div1 &lt;= html.BR()

# 顯示乙班標題
brython_div1 &lt;= html.H3("乙班")  # 這行會顯示 "乙班" 標題

for i in range(num):
    brython_div1 &lt;= str(i+1) + ". " + html.A("2b-g" + str(i+1), href="https://mdecd2025.github.io/2b-" + "g" + str(i+1))
    brython_div1 &lt;= " / " + html.A("repo", href="https://github.com/mdecd2025/2b-" + "g" + str(i+1))
    brython_div1 &lt;= html.BR()
</pre>
<h2>w3</h2>
<p><span>列出各班目前尚未納入分組的學員名單。</span></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false"># 甲班學員資料處理
url = "https://mde.tw/list/2a.txt"
data = open(url).readlines()
all_stud = data[1:]
a_all_members = ['41223154', '41271125', '41271158', '41271146', '41271131', 'CYG41223103', '41223102', '41023128', '41023137', '41223137', '41223157', '41223156', 'otakuyoyo', '41223141', '41223113', 'kim41223114', 'joeisme1208', '41223116', '41223144', '41223140', '41223143', '41223138', '41223134', '41223136', 'zhe41223118', 'Spirit0224', 'yuhao-08', '41223158', 'Ren911308', '41223150', 'Manto8', 'CYA41223106', 'yan21ed', 'Lin41223107', '41223133', 'hong41223129', '41223110', '41223147', 'Linjiahong41223125', 'CHN41223132', 'Yu-Fang-Hong', '41023111', 'yckaooooo', 'kolas911205', '41023105', '40932134', '41223104', 'yan41223101', '41223105', '41223153', '41223120', '41223152', 'G8People', 'WSE41223112', '41223146', '41223119']

# 顯示甲班標題
print("甲班:")
for i in all_stud:
    drop_n = i.rstrip("\n")
    stud = drop_n.split("\t")
    stud_num = stud[0]
    stud_github = stud[1]
    if stud_github not in a_all_members:
        print(stud_num)

# 乙班學員資料處理
url = "https://mde.tw/list/2b.txt"
data = open(url).readlines()
all_stud = data[1:]
b_all_members = ['41223251', '41223211', '41223245', '41223243', 'jjjay41223212', 'leeshaowei0716', '41223234', '41223209', '41223205', '41223201', '41223202', '41223208-hw', '41223216', '41223217', '41223248', 'emma0312', '41223242', '41223203', '41223144', '41223235', 'RAY41223215', 'hyy41223228', '41223227', '41223206', '41223226-0', 'Cloud41223237', 'Yujenchuang', '41223225', 'ljg41223220', 'supowen', 'jacky93111', '41223246', 'Liu41223244', '41223236', '41223219', '41271237', '41223249', '41223229', '41223224', '41223222', '41223231', 'linryan23', '41023114', '41223230', 'timluo123', 'CYC41223247', '41223218', 'ych0227', '41023215', '41023216', '41023213', '41071203', '41071204', '41071202', 'c-ching', 'YUN4', 'tseYU000', 'snowfall-killer', 'junpig10']

# 顯示乙班標題
print("\n乙班:")
for i in all_stud:
    drop_n = i.rstrip("\n")
    stud = drop_n.split("\t")
    stud_num = stud[0]
    stud_github = stud[1]
    if stud_github not in b_all_members:
        print(stud_num)
</pre>
<p></p>
<p><img alt="" height="473" src="/images/螢幕擷取畫面 (6).png" width="202"/></p>
<h2>w4</h2>
<p><span>已知目前學員的作業倉儲無法在 IPv6 位址設定時正確運作，必須下載 </span><a href="http://229.cycu.org/cmsimde_w4.7z">cmsimde_w4.7z</a>，<span>解開壓縮檔案後，替換倉儲中的 cmsimde 目錄</span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/3DkIomtGt3o?si=ACfp6WRTvrG4Znoz" title="YouTube video player" width="560"></iframe></p>
<hr/>
<p><span>開始建立 Webots 模擬場景：</span></p>
<p>平面四連桿的尺寸設計: 固定桿長度為 1m, 主動旋轉桿長度為 0.4m, 第二旋轉桿長度為 0.6m, 第三旋轉桿長度為 0.9m.</p>
<h2>w5</h2>
<p><span>cadlab 網路設定： <a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/41223118_nfu_edu_tw/EX82wkYkIYtEpzRJDhCWzNYBl8ohG24zWVn6rKb2WgaCjw?e=zu12L2">IPV6設定範例下載</a></span></p>
<p><span style="background-color: #ccffcc;">(註：以管理者身分執行的兩個檔案前需如果不是自己的電腦，需將系統重新登入後再依序執行兩個檔案)</span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/b_MSt6YTAvc?si=hQ647yc6Wnf3kQsa" title="YouTube video player" width="560"></iframe></p>
<p><span>Webots 開啟、新建工作資料夾到<span style="background-color: #ffff00;">利用 box</span> 物件<span style="background-color: #ffff00;">建立 link</span>，利用 <span style="background-color: #ffff00;">HingeJoint 建立旋轉軸</span>，並且<span style="background-color: #ffff00;">利用 Python</span> controller 程式<span style="background-color: #ffff00;">控制 link 的旋轉<span style="background-color: #ffffff;">：</span></span></span></p>
<p></p>
<h2>w6</h2>
<p>如何啟動webots：在本學期可攜程式的start.bat中，已經有在可攜上啟動的程式，只需確認<a href="http://229.cycu.org/Webots_2025a_web.7z">Webots_2025a_web.7z</a><span> 是否壓縮放入可攜套件<span style="background-color: #ccffcc;">(</span></span><span style="background-color: #ccffcc;"><a href="http://229.cycu.org/portable_wcm2025.7z" style="background-color: #ccffcc;">portable_wcm2025.7z</a></span><span><span style="background-color: #ccffcc;">)</span>的 data 目錄中，如是使用舊版的可攜套件，也可在.bat啟動編碼中自行設定加入：</span></p>
<pre class="brush:csharp;auto-links:false;toolbar:false" contenteditable="false">REM for Webots
set PYTHON_PATH=%Disk%:\Python313
 
REM for webots
set  path_webots=%Disk%:\Webots_2025a\msys64\mingw64\bin;%Disk%:\Webots_2025a\msys64\usr\bin
 
path=%Disk%:;%path_python%;%path_git%;%path_copsim%;%path_msys2%;%path_miketex%;%path_flutter%;%path_node%;%path_tcc%;%path_postgresql%;%path_range%;%path_lua%;%path_core%;%path_putty%;%path_vscode%;%RUST_PATH%;%path_erlang%;%path_nodejs%;%path_haskell%;%path_scite%;%path_xsltproc%;%path_gnuplot%;%path_openssl%;%path_poppler%;%path_webots%;%path_blender%;%path%;
</pre>
<p>即可。</p>
<p><span style="background-color: #ccffcc;">(常見問題：解壓縮檔案內檔案還有一層，如未依照自己設定路徑放置，webots會無法開啟</span></p>
<p>                <span style="background-color: #ccffcc;">有些人還在使用舊版可攜程式，.bat沒有webots啟動設定</span></p>
<p>                <span style="background-color: #ccffcc;">在開啟webots時系統會有跳出警告防火牆，其中一定要選擇允許，否則防火牆會擋)</span></p>
<p></p>
<h2>w7</h2>
<p>本週因連假而未上課，將當週上課班級上課內容整理至此。</p>
<p>建立 fourbar box 過程中的要點：</p>
<ol style="list-style-type: lower-roman;">
<li>各 Solid - Shape - geometry 在建立 open chain 機構時，可以在尚未設定 physics 之前單軸運轉，但 Webots 牽涉需要模擬 closed chain 機構時，各 Solid - Shape -geometry 則必須設定 boundingObject 與 physics 才能透過 solidReference 進行 dynamics 聯立運算，亦即 Webots 在模擬封閉機構時，只能處理 Dynamics 模擬。<span style="background-color: #ccffcc;">(原因是其模擬運算是從 <a href="https://www.ode.org/" style="background-color: #ccffcc;">ODE</a> 動力程式庫修改而來，並沒有附加 closed chain 的 kinematics 運算)</span></li>
<li>當個別 link 採 box 建立時，為了要符合其 kinematics 運動約束條件，各桿件的起始條件必須滿足 fourbar linkage 的約束條件，因此只有 link1 旋轉 90 度，可以在 x 與 y 軸同動的情況下無需透 pose 進行局部座標轉換, 但 link2 與 link3 在納入 Shape 之前必須立 pose 節點置入額外的座標轉換。</li>
<li>各 link 的 boundingObject 欄位，可以透過其 link Shape 採 USE 的方式重用。</li>
<li>最後 joint4 的旋轉中心則透過 solidReference 與 link3 的端點座標重合，才能完成 closed chain 的動力約束條件模擬。</li>
</ol>
<hr/>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/qbliHOMGrww?si=R31CU0RtPh3nPT_S" title="YouTube video player" width="560"></iframe></p>
<p><span style="background-color: #ccffcc;">(最後ball部分也已約束完成如下圖，或<a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/41223118_nfu_edu_tw/ETVLbNOoCyhMlt2x0xZ0j9gBw0EhsJdp7ygw9fWCymuuYg?e=j6jtkB">下載檔案</a>查看)</span></p>
<p><img alt="" height="521" src="/images/螢幕擷取畫面 (25).png" width="510"/></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/0JEJCfbpLYA?si=ZWZ2WklfgmKaquNs" title="YouTube video player" width="560"></iframe></p><h2>w8</h2>
<p>複習webots<span> </span><a href="https://cyberbotics.com/doc/reference/solidreference">SolidReference</a><span><span> </span>節點的用法說明，用在 Joint 節點的 endPoint 欄位中，用來指向一個現有的 Solid 或靜態環境 <span style="background-color: #ffff00;">&lt;static environment&gt;</span>。通過這種方式，可以閉合機械迴圈。</span></p>
<p><span>當指向一個 Solid 時，唯一的限制是 Solid 和 Joint 必須是某個共同上層 Solid 的下層。</span></p>
<p>意思即是指 SolidReference 是一個引用類型，允許在 Joint 節點的 endPoint 欄位中指定某個目標。</p>
<p>它可以指向兩種類型的對象：</p>
<ol>
<li>現有的 Solid：這是一個具體的實體，但這個 Solid 和 Joint 必須是某個共同上層 Solid 的下層。</li>
<li>靜態環境 &lt;static environment&gt;：這通常指的是不動的參考框架（例如地面或固定基座）</li>
</ol>
<p><span>第一作法：</span></p>
<p><span>若將 fourbar linkage 的 joint4 設置在 base link 的最右端，然後將 joint4 的 endPoint 欄位，設為 SolidReference 指向 link3，即可符合 Soild (link3) 與 Joint (joint4) 都是某個共同上層 Solid (base) 的下層。</span></p>
<p><span>第二作法：</span></p>
<p><span>可以將 fourbar linkage 的 joint4 設置在 link3 的末端，然後將 joint4 的 endPoint 欄位指向 <span style="background-color: #ffff00;">&lt;static environment&gt;</span>，讓 link3 的末端固定在 ground (其作用與固定在 base 節點相同)。</span></p>
<h2>w9</h2>
<p>本週為統整先前所完成的各週的進度、作業網頁內容以及心得和錄製其中自評影片。</p>
<p>詳細至<a href="https://mdecd2025.github.io/hw-zhe41223118/content/Midterm.html">這個目錄</a></p>
<hr/>
<p>webots配合計數器(七段顯示器)、webots版本問題，最後投籃機重點交代。</p>
<h2>w10</h2>
<p>截至目前已知：</p>
<p><em><strong>1.</strong></em> 最新的可攜程式系統與套件版本：</p>
<p><a href="http://229.cycu.org/portable_wcm2025_w10.7z">portable_wcm2025.7z</a></p>
<p><em><strong>2.</strong></em> 已知如何自行建立各種版本的 Python 可攜系統：</p>
<p><a href="https://mdecd2025.github.io/hw-zhe41223118/content/task1.html">個人網站內容</a>、<a href="https://mde.tw/cd2025/content/Portable.html">導師詳解內容</a></p>
<p><em><strong>3.</strong></em> 已知哪一個版本 SciTE 較為穩定：</p>
<p><span>以 <a href="http://229.cycu.org/wscite_5.5.5.7z">wscite_5.5.5.7z</a> <span>取代 5.5.4 版的 wscite 目錄 <span style="background-color: #ccffcc;">(更新</span></span><span style="background-color: #ccffcc;">在 portable_wcm2025.7z 中的 wscite)</span></span></p>
<p><em><strong>4.</strong></em> 已知如何使用 Codespaces 管理個人與協同分組的倉儲：</p>
<p><span>./init_replit <span style="background-color: #ccffcc;">(處理 codespaces 上的 python 模組，令其可執行 <strong>python main.py</strong> 與 <strong>python main2.py</strong>)</span></span></p>
<p><strong><em>5.</em></strong> 已知可以透過 token 或 Github session 管理管理個人與協同分組的倉儲：</p>
<ol>
<li>.git/config 中 url 將 token 放入即可取得權限 (透過 https)</li>
<li>利用 puttygen.exe 建立 keys，然後以 session 取得維護倉儲的權限</li>
</ol>
<p><a href="https://mdecd2025.github.io/hw-zhe41223118/content/task2.html">個人操作過程</a>、<a href="https://mde.tw/cd2025/content/SSH.html">導師步驟</a></p>
<p><strong>6.</strong> 已知哪一個版本的 Webots 較為穩定：</p>
<p><span>Webots 2025a 有不少 bugs，其中包括操作<span style="background-color: #ffff99;">過程閃退</span>以及<span style="background-color: #ffff99;">無法使用 Transform 節點</span>，因此可以換為 </span><a href="http://229.cycu.org/Webots_2023b.7z">Webots_2023b.7z</a><span><span> </span>版</span></p>
<p><strong><em>7.</em></strong> 已知如何更新個人與協同分組的倉儲, 以便套用所分配的<span> </span><a href="https://mde.tw/cd2025/content/IPv6.html">IPv6 位址</a>啟動網際協同流程：</p>
<p><span>w4 之前的學員作業倉儲版本，無法在 IPv6 位址設定時正確運作，必須下載 </span><a href="http://229.cycu.org/cmsimde_w4.7z">cmsimde_w4.7z</a>，<span>解開壓縮檔案後，替換倉儲中的 cmsimde 目錄，並</span><span>更改 init.py 中將 ip 設為所分配的<span> </span><a href="https://mde.tw/cd2025/content/IPv6.html">IPv6 address</a></span></p>
<p><strong><em>8.</em></strong> 已知投籃機的零組件可以透過 Solvespace 與 Onshape 繪製，其中前者簡便而後者有利於協同：</p>
<p></p>
<p><strong><em>9.</em></strong> 已知如何利用 Solid - Shape - Box 或 Solid - CadShape 建立封閉式多連桿機構模擬，(若希望直接更改零組件顏色， 則可以使用 Solid - Shape - Mesh 進行多連桿機構進行組立：</p>
<p><a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/41223118_nfu_edu_tw/ER4W2mnCl35Bq4JsHzhoSXABKtOeyi3Qb7hpn_3c0oGRYQ?e=IvaXJF">41223118-fourbar-w10.7z</a>，此檔案內包括了</p>
<ol style="list-style-type: lower-alpha;">
<li><span>直接使用 <span style="background-color: #ffff99;">Solid - Shape - Mesh</span> 比較方便直接利用 material 設定零件顏色</span></li>
<li><span>joint4 設於 base 右端, 然後利用 SolidReference <span style="background-color: #ffff99;">指向 link3</span></span></li>
<li><span>joint4 設於 link3 末端, 然後利用 SolidReference 指向 <span style="background-color: #ffff99;">static_environment</span></span></li>
</ol>
<p>三種組立方式</p>
<p><strong><em>10.</em></strong> 已知可以透過 Solid - Shape - Mesh 中 material 的名稱，以控制器程式改變顏色，進而製作出七段顯示模擬器：</p>
<p><span><strong><em>11.</em></strong> 已知可以透過 boundingObject 中的 Mesh 設定，讓封閉連桿執行投籃動作，且經由紅外線距離感測紀錄是否得分：</span></p>
<p><span><strong><em>12.</em></strong> 接下來若要利用各組員所分配的 </span><a href="https://mde.tw/cd2025/content/IPv6.html">IPv6 位址</a><span>配置一台具備 https 連線用的網際協同伺服器，建議使用 Virtualbox 或<span> </span></span><a href="https://www.vmware.com/products/desktop-hypervisor/workstation-and-fusion">VMWare Workstation</a><span><span> </span>加上 Nginx，Stunnel 或直接採 cmsimde 進行設定</span></p>
<p><span><strong><em>13.</em></strong> 投籃機與籃框的移動裝置則可採用 </span><a href="https://www.cyberbotics.com/doc/guide/youbot?version=cyberbotics:R2019a-rev1#!">Kuka 套件項下</a><span>的<span> </span></span><a href="https://mde.tw/cd2025/content/Youbot_cart.html">Youbot</a><span><span> </span></span><a href="https://en.wikipedia.org/wiki/Mecanum_wheel">Mecanum</a><span><span> </span>輪底座</span></p>
<p><strong><em>14.</em></strong> <span style="background-color: #ccffcc;">(參考)</span> 對於 webotsw --stream 在近端啟動伺服器的部分尚未完成, 目前僅能透過官方網站擷取 Webotsview.js, 具體問題在於 webots 串流伺服器啟動後, 不接受跨網域擷取 Webotsview.js, 亦即必須處理伺服器間的 Access-Control-Allow-Origin（CORS）議題. 自行<span> </span><a href="https://github.com/cyberbotics/webots/wiki/Windows-installation/">build webotsw.exe</a><span> </span>應該就可以克服此一問題.</p>
<p><strong><em>15.</em> </strong><span style="background-color: #ccffcc;">(參考)</span> 另外 Webots stream server 目前僅接受多 client 檢視, 而不支援跨 server 執行 controller 指令, 若要在系統模擬架構下進行多人同步協同 (類似 CoppeliaSim 的串流控制), 則必須自行處理.</p><h2>w11</h2>
<p>webots 小組協同模擬及 fourbar_box複習</p>
<h2>w12</h2>
<p>本週開始需依照team上，在規定時間完成對應的HW、Exam等網頁內容，並在規定時間內完成表單填寫。</p><h1>Tutorial</h1>
<h4 class="anchor-header" id="addanepuckrobot" name="add-an-e-puck-robot"><span>電子冰球機器人：</span></h4>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/KVXbz-2oAOs?si=ob2qLG6NO24k9Wbk" title="YouTube video player" width="560"></iframe></p>
<p><code><span style="background-color: #ffff99;">RectangleArena</span> </code><span><span>場景樹中的節點，打開節點並顯示其字段。 <span style="background-color: #ccffcc;">(雙點擊各節點可以帶出其特定的欄位)</span></span></span></p>
<p><span><span><code>Add</code><span><span>按鈕。</span></span><img alt="" height="26" src="https://raw.githubusercontent.com/cyberbotics/webots/released/docs/guide/images/add-button.png" width="26"/><span><span>在開啟的對話方塊中選擇 </span></span><span style="background-color: #ffff99;"><code>PROTO nodes (Webots Projects) / objects / factory / containers / WoodenBox (Solid)</code></span><span><span>，競技場中央應該會出現一個大箱子</span></span></span></span></p>
<p><span><span><span><span><span>選擇場景樹視圖的最後一個節點。按一下場景樹視圖頂部的</span><code>Add</code><span><span>按鈕，</span></span><img alt="" height="26" src="https://raw.githubusercontent.com/cyberbotics/webots/released/docs/guide/images/add-button.png" width="26"/><span><span>在對話框中選擇 </span></span><span style="background-color: #ffff99;"><code>PROTO nodes (Webots Projects) / robots / gctronic / e-puck / E-puck (Robot)</code></span><span><span>，電子冰上曲棍球機器人會出現在競技場的中央，移動並旋轉這個機器人，就像移動和旋轉盒子一樣，儲存模擬並按下</span></span><code>Run real-time</code><span><span>按鈕</span></span><img alt="" height="26" src="https://raw.githubusercontent.com/cyberbotics/webots/released/docs/guide/images/realtime-button.png" width="26"/></span></span></span></span></p><h1>tasks</h1>
<p><span>task1 與 task2 任務為建立可在<span style="background-color: #ffff00;">近端維護個人作業與協同作業</span>的前置準備工作：</span></p>
<p><span><em><strong>1.</strong></em> </span>task1 (自行製作可攜程式系統)</p>
<p><em><strong>2.</strong></em> task2 ( SSH 協定執行作業倉儲的推送)</p>
<hr/>
<p><span>task3 與 task4 為 <a href="https://mdecd2025.github.io/hw-zhe41223118/content/HW2.html">HW2 </a>的內容：</span></p>
<p><em><strong>1.</strong></em> task3 (<span style="background-color: #ffff00;">Solvespace</span> 建立<span style="background-color: #ffff00;">平面四連桿</span>系統零組件)</p>
<p><em><strong>2.</strong></em> task4 (<span style="background-color: #ffff00;">Onshape</span> 建立平面<span style="background-color: #ffff00;">四連桿</span>系統零組件)</p>
<hr/>
<p>task5 與 task6 為 <a href="https://mdecd2025.github.io/hw-zhe41223118/content/HW3.html">HW3</a> 的<span style="background-color: #ffff00;">主要</span>內容</p>
<p><strong><em>1.</em></strong> task5 (Webots Tutorial 1 ~3)</p>
<p><em><strong>2.</strong></em> task6 (Webots Tutorial 4 ~6)</p><h2>task1</h2>
<p>下方<span style="background-color: #ccffcc;">python版本更新影片缺少內容補充</span>：</p>
<p><em><strong>1.</strong></em> <span>以<span style="background-color: #ffff00;">python get-pip.py</span>安裝 pip 工具, 完成後，之後以<span style="background-color: #ffff99;">pip list</span>確認<span style="background-color: #ffff99;">pip.exe</span>已經配置完成</span></p>
<p><span><em><strong>2.</strong></em> 以<span style="background-color: #ffff00;">pip install flask flask_cors bs4 lxml pelican markdown</span>安裝<span style="background-color: #ffff00;">cmsimde</span>網際內容管理系統啟動所需的 Python模組</span></p>
<p>補做上以上兩件後，便可使用<span>可攜系統中的Python 3.13.2套件</span><span>來維護個人作業倉儲與分組倉儲</span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/j4qfDKo7DzU?si=lI-emrZxkcO6tWnn" title="YouTube video player" width="560"></iframe></p>
<h2>task2</h2>
<p><span style="background-color: #ccffcc;">(注意要點：如是設定IPV6-putty時proxy設定需將None調為HTTP)</span></p>
<p>此影片因使用<strong><span style="background-color: #ffff99;">regedit</span></strong>指令後後續內容缺失，以下為補充:</p>
<p><strong><em>1.</em></strong><span>利用<span style="background-color: #ffff99;">命令列 regedit</span> 指令進入後，在 HKEY_CURRENT_USER 內 SOFTWARE 裡 SimonTatham位置，滑鼠右鍵將此登錄設定檔案【<span style="background-color: #ffff99;">匯出</span>】存入可攜程式 <span style="background-color: #ffff99;">start_ipv6.bat 所在目錄</span>。<span style="background-color: #ccffcc;">(名稱隨意)</span></span></p>
<p><span style="background-color: #ccffcc;"><span style="background-color: #ffffff;">2. <span>將指定的倉儲帳號下的分支克隆後即可完成</span></span></span></p>
<p><span style="background-color: #ccffcc;"><span style="background-color: #ffffff;"><span>   <span style="background-color: #ccffcc;">例：git clone --recurse-submodules git@(.ppk名稱):(倉儲帳號)/(倉儲分支名稱).git </span></span></span><br/></span></p>
<p><span style="background-color: #ffffff;">   操作依據有參考整理重點的-<a href="https://zhe41223118.github.io/cp2023/content/w13.html">這個網站</a></span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/aZtLGjSjIPg?si=i4oKpWWSVXTR45Bi" title="YouTube video player" width="560"></iframe></p>
<h2>task3</h2>
<h4>使用 Solvespace 建立平面四連桿系統零組件</h4>
<p><a href="https://mdecd2025.github.io/hw-scrum-1/downloads/fourbar_slvs.7z">題目</a></p>
<p>完成檔：<a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/41223118_nfu_edu_tw/EcO29w9IJSdDotEFKULpvpUBF0XIwCh4t8qX6BhOT5Zj8Q?e=y3Ca1t">41223118_fourbar_slvs.7z</a></p>
<p>影片：</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/VqGk_asNmDc?si=KsJeF9WvvcRaN2LW" title="YouTube video player" width="560"></iframe></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/W2brloCr5Qc?si=w4OcjZTS1ppU4sJg" title="YouTube video player" width="560"></iframe></p>
<h2>task4</h2>
<p><span><a href="https://mdecd2025.github.io/2a-ag4/content/Brython.html?src=https://gist.githubusercontent.com/zhe41223118/de8d72a66126859139f42a25276bfa25/raw/1dd61ed37c8457f99353d5ddfd539bd27ff28a83/ag">2a分組網站與倉儲連結</a></span></p>
<p><span><a href="https://mdecd2025.github.io/2a-ag4/content/Brython.html?src=https://gist.githubusercontent.com/zhe41223118/8ab2bde273de00d794d7d46d7540dc08/raw/8a7fdc0fc7cd89c04f5019fc620a0677f50b4fd6/bg">2b分組網站與倉儲連結</a></span></p>
<p><span>因為上列程式已經給出兩班當時已經參與分組的學員 Github 帳號，因此只需要從 </span><a href="https://mde.tw/list/2a.txt">https://mde.tw/list/2a.txt</a><span> 讀取學員的學號與 Github 帳號，並且在 for 迴圈中，逐一用學員的 Github 帳號相對於各班已經參與分組的學員 Github 帳號，並且列出特定學員的 Github 帳號不在前述已經參與分組的學員帳號數列中，即可列出截至當時尚未那組的學員學號。</span></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false"># 甲班學員資料處理
url = "https://mde.tw/list/2a.txt"
data = open(url).readlines()
all_stud = data[1:]
a_all_members = ['41223154', '41271125', '41271158', '41271146', '41271131', 'CYG41223103', '41223102', '41023128', '41023137', '41223137', '41223157', '41223156', 'otakuyoyo', '41223141', '41223113', 'kim41223114', 'joeisme1208', '41223116', '41223144', '41223140', '41223143', '41223138', '41223134', '41223136', 'zhe41223118', 'Spirit0224', 'yuhao-08', '41223158', 'Ren911308', '41223150', 'Manto8', 'CYA41223106', 'yan21ed', 'Lin41223107', '41223133', 'hong41223129', '41223110', '41223147', 'Linjiahong41223125', 'CHN41223132', 'Yu-Fang-Hong', '41023111', 'yckaooooo', 'kolas911205', '41023105', '40932134', '41223104', 'yan41223101', '41223105', '41223153', '41223120', '41223152', 'G8People', 'WSE41223112', '41223146', '41223119']
 
# 顯示甲班標題
print("甲班:")
for i in all_stud:
    drop_n = i.rstrip("\n")
    stud = drop_n.split("\t")
    stud_num = stud[0]
    stud_github = stud[1]
    if stud_github not in a_all_members:
        print(stud_num)</pre>
<p><a href="https://mdecd2025.github.io/2a-ag4/content/Brython.html?src=https://gist.githubusercontent.com/zhe41223118/fcdf65c3206155c5cd56140e47c6c87d/raw/8a5262e66228212fbc4f862ceaf67c798c9fb54c/2a-1">2a未加入團隊學員</a></p><h2>task5</h2>
<p><span style="background-color: #ff99cc;"><em><strong>1.</strong></em>請用繁體中文詳細說明下列<a href="https://cyberbotics.com/doc/guide/introduction-to-webots" style="background-color: #ff99cc;">資料</a></span>：(<span style="background-color: #ccffcc;">41223136<span style="background-color: #ffffff;">)</span></span></p>
<p>Q1：什麼是Webots?</p>
<p>Webots是一款專業的移動機器人模擬軟件，提供了3D虛擬環境，支持物理屬性設計，並且可創建不同類型的機器人(輪式、腿式、飛行)，並添加傳感器和執行器。支持單獨編程機器人以實現特定行為，提供大量模型和示例。模擬成功後，可以將程序轉移至真實的機器人，支持擴展新接口。</p>
<p>Q2：我可以用Webots做什麼?</p>
<p>應用領域：適用在移動機器人原型設計、運動研究、多代理系統、適應行為研究。</p>
<p>行業範圍：涵蓋學術、汽車、航空、吸塵器、玩具等行業。</p>
<p>教育用途：支持機器人學和編程教學（C/C++/Java/Python）</p>
<p>競賽：可用於機器人比賽。</p>
<p><span>Q3：要使用Webots，我需要知道什麼?</span></p>
<ol>
<li>程式語言知識 ：需具備<span>C、C++、Java、Python或MATLAB</span>的基本知識來撰寫機器人控制器。若不熟悉語言可使用<span>簡單圖形化程式語言BotStudio編程</span>(適用於e-puck和Hemisson機器人)</li>
<li>3D模型創建：需了解<span>3D電腦圖形</span>和<span>VRML97</span>描述語言。</li>
</ol>
<p>Q4：什麼是世界?</p>
<ul>
<li>世界定義：描述3D涵蓋機器人及其環境的所有屬性(如位置、方向、幾何、外觀、物理屬性等)</li>
<li>層次結構：物件以層次方式組織，可包含其他物件(輪子、感測器、關節等)</li>
<li>功能與限制：(.wbt)不含控制器程示碼，只指定每個機器人所需的控制器名稱。</li>
<li>儲存位置：檔案以".wbt"格式儲存，位於Webots專案的"worlds"子目錄</li>
</ul>
<p>Q5：什麼是控制器?</p>
<ol>
<li>控制器定義：控制器是用來控制world檔案中機器人的電腦程式</li>
<li>運行機制：模擬開始時，Webots為每個機器人啟動獨立的控制進程，多個機器人可共用同一程式碼，但每個機器人有獨立進程。</li>
<li>儲存位置：控制器檔案儲存在專案的"controllers"子目錄</li>
</ol>
<p>這是Webots中控制器的<span>核心概念</span>，<span>強調其獨立性與語言支援的多樣性</span>。</p>
<p>Q6：什麼是監督控制器?</p>
<ol>
<li>監督控制器定義：當機器人的<span>supervisor欄位設為TURE<span>，控制器成為監督控制器。能執行人類操作員的任務，而非真實機器人能完成的動作。</span><span></span></span></li>
<li><span><span>特權操作：與一般控制器不同，監督控制器擁有特權功能，包括模擬控制，如隨機移動機器人、錄製模擬影片等。</span></span></li>
</ol>
<p><span style="background-color: #ff99cc;"><strong><em>2.</em></strong>請整理<a href="https://cyberbotics.com/doc/guide/introduction-to-webots" style="background-color: #ff99cc;">網頁</a>中重要的英文單字與用法，並且針對其中所使用的英文文法逐句說明</span>：<span style="background-color: #ffffff;">(<span style="background-color: #ccffcc;">41223122</span>)</span></p>
<ol data-end="1116" data-start="38">
<li data-end="175" data-start="38">
<p data-end="77" data-start="41"><strong data-end="68" data-start="41">Mobile robot simulation</strong>（移動機器人模擬）</p>
<strong data-end="89" data-start="83">差異</strong>：英文中的「simulation」指的是在虛擬環境中模擬機器人行為，而中文「模擬」同樣表示模仿，但在某些語境下，可能沒有英文「simulation」那麼強烈的虛擬環境暗示。</li>
<li data-end="282" data-start="177">
<p data-end="209" data-start="180"><strong data-end="201" data-start="180">Rapid prototyping</strong>（快速原型設計）</p>
<strong data-end="221" data-start="215">差異</strong>：英文「prototyping」具體指「製作原型」這個過程，而中文「原型設計」更偏向結果導向，較少強調「製作過程」的含義。</li>
<li data-end="396" data-start="284">
<p data-end="315" data-start="287"><strong data-end="309" data-start="287">Physics properties</strong>（物理屬性）</p>
<strong data-end="327" data-start="321">差異</strong>：英文「properties」除了「屬性」，也可以指物理環境中的具體特徵和參數，而中文的「屬性」更多強調事物的性質，而不一定包含具體數值。</li>
<li data-end="542" data-start="398">
<p data-end="429" data-start="401"><strong data-end="423" data-start="401">Locomotion schemes</strong>（移動方式）</p>
<strong data-end="441" data-start="435">差異</strong>：英文「locomotion」特指機器人或動物的移動方式，包括步行、飛行等具體方式；而中文「移動」泛指動作，涵蓋範圍更廣泛。英文「schemes」強調設計、計劃的結構，但中文「方式」沒有強烈的規劃意味。</li>
<li data-end="637" data-start="544">
<p data-end="575" data-start="547"><strong data-end="569" data-start="547">Controller program</strong>（控制程式）</p>
<strong data-end="587" data-start="581">差異</strong>：英文「controller」強調設備或程式的控制功能，而中文「控制」可能更多指行為，而非具體裝置。</li>
<li data-end="740" data-start="639">
<p data-end="665" data-start="642"><strong data-end="658" data-start="642">Robot models</strong>（機器人模型）</p>
<strong data-end="677" data-start="671">差異</strong>：英文「model」不僅指模型，還可以包含系統設計的概念，而中文「模型」更偏向於外形或結構，缺乏英文中「概念模型」的深層意義。</li>
<li data-end="848" data-start="742">
<p data-end="773" data-start="745"><strong data-end="767" data-start="745">Swarm intelligence</strong>（群體智能）</p>
<strong data-end="785" data-start="779">差異</strong>：英文「swarm」特指動物或機器人的群體行動，並且有合作與集體行為的含義，而中文「群體」也可指單純的個體聚集，未必強調合作。</li>
<li data-end="961" data-start="850">
<p data-end="880" data-start="853"><strong data-end="874" data-start="853">Genetic algorithm</strong>（遺傳算法）</p>
<strong data-end="892" data-start="886">差異</strong>：英文「genetic」在此術語中引用遺傳學理論，而中文「遺傳」通常與生物學相關，在技術環境下可能需要具體說明該算法如何模仿生物遺傳過程。</li>
<li data-end="1072" data-start="963">
<p data-end="991" data-start="966"><strong data-end="985" data-start="966">Neural networks</strong>（神經網絡）</p>
<strong data-end="1003" data-start="997">差異</strong>：英文中的「neural」源於生物神經系統，並引申至機器學習模型，而中文「神經」更多指生物概念，除非在明確的技術背景下才會引申至計算領域。</li>
<li data-end="1116" data-start="1074">
<p data-end="1116" data-start="1078"><strong data-end="1110" data-start="1078">Artificial intelligence (AI)</strong>（人工智能）</p>
<strong data-end="1128" data-start="1122">差異</strong>：英文「artificial intelligence」是技術術語，指模擬人類智能的系統，中文「人工智能」直接翻譯，但中文的「人工」有時強調「人為」製造，可能略有不同的語感。</li>
</ol>
<ol data-end="1255" data-start="1217" start="11">
<li data-end="1255" data-start="1217"><strong data-end="1246" data-start="1221">Supervisor controller</strong>（監督者控制程式）<strong data-end="1267" data-start="1261">差異</strong>：英文「supervisor」在此指具有高級管理功能的控制器，而中文「監督者」更多強調「人」的角色，控制程式翻譯時可能會弱化其技術層面的管理權限含義。</li>
</ol>
<ol data-end="1380" data-start="1344" start="12">
<li data-end="1380" data-start="1344"><strong data-end="1372" data-start="1348">Multi-agent research</strong>（多智能體研究）<strong data-end="1392" data-start="1386">差異</strong>：英文「agent」具備自主行為或決策功能，中文「智能體」強調的是智能或行動個體，但「體」的翻譯可能較模糊，沒有完全涵蓋英文中「agent」的主動性和自決性。</li>
</ol>
<ol data-end="1505" data-start="1473" start="13">
<li data-end="1505" data-start="1473"><strong data-end="1499" data-start="1477">Simulation control</strong>（模擬控制）<strong data-end="1517" data-start="1511">差異</strong>：英文「simulation」強調在虛擬或模擬環境中的控制，而中文「模擬控制」雖然意義相同，但「模擬」一詞在某些語境下會與「模仿」混淆。</li>
</ol>
<ol data-end="1621" data-start="1587" start="14">
<li data-end="1621" data-start="1587"><strong data-end="1612" data-start="1591">3D virtual worlds</strong>（3D 虛擬世界）<strong data-end="1633" data-start="1627">差異</strong>：英文「virtual worlds」通常指的是由電腦生成的虛擬環境，而中文「虛擬世界」在非技術環境中也可能指非現實的想像世界，因此技術語境中需要強調其數位屬性。</li>
</ol>
<p><span style="background-color: #ff99cc;"><strong><em>3.</em></strong>請摘要出下列內容：(放入英文文章內容)</span>：(<span style="background-color: #ccffcc;">41223134</span>)</p>
<ul>
<li class="break-words"><strong>What is Webots?</strong><br/>Webots is a professional mobile robot simulation software that provides a rapid prototyping environment. It allows users to create 3D virtual worlds with physics properties (e.g., mass, joints, friction) and add passive or active objects like mobile robots. Users can equip robots with sensors and actuators and program them for desired behaviors. It offers numerous robot models, examples, and interfaces to transfer simulations to real robots like e-puck or Nao.</li>
</ul>
<ul>
<li class="break-words"><strong>What can I do with Webots?</strong><br/>Webots is ideal for research and education in mobile robotics, supporting projects like robot prototyping (e.g., academic, automotive, toy industries), locomotion research (legged, humanoid robots), multi-agent studies (swarm intelligence, collaborative robots), and adaptive behavior research (genetic algorithms, AI). It’s also used for teaching robotics and robot competitions.</li>
</ul>
<ul>
<li class="break-words"><strong>What do I need to know to use Webots?</strong><br/>Basic knowledge of C, C++, Java, Python, or MATLAB is required to program controllers, though beginners can use the graphical BotStudio language for certain robots (e.g., e-puck). To create custom models or environments, familiarity with 3D graphics and VRML97 is needed for designing or importing 3D objects.</li>
</ul>
<ul>
<li class="break-words"><strong>How do I get User Support?</strong><br/>Cyberbotics offers paid support via Premier Service plans and custom development. Community-based support is available through Robotics StackExchange (webots tag), GitHub Discussions (development questions), GitHub Issues (bug reports), and Discord (quick discussions), though responses aren’t guaranteed.</li>
</ul>
<ul>
<li class="break-words"><strong>Webots Simulation</strong><br/>A Webots simulation consists of a world file (.wbt) defining robots and their environment, controller programs (in C/C++/Java/Python/MATLAB), and an optional physics plugin (in C/C++) to adjust physics behavior. World files may rely on external PROTO files and textures.</li>
</ul>
<ul>
<li class="break-words"><strong>What is a World?</strong><br/>A "world" in Webots is a 3D description of robots and their environment, detailing properties like position, geometry, appearance, and physics. Organized hierarchically (like VRML97), world files (.wbt) specify controller names but don’t include the controller code itself.</li>
</ul>
<ul>
<li class="break-words"><strong>What is a Controller?</strong><br/>A controller is a program that directs a robot in a world file, written in C, C++, Java, Python, or MATLAB. Webots launches each controller as a separate process per robot at simulation start. Some languages require compilation (e.g., C/C++), others interpretation (e.g., Python), with files stored in the "controllers" subdirectory.</li>
</ul>
<ul>
<li class="break-words"><strong>What is a Supervisor Controller?</strong><br/>A supervisor controller, tied to a robot with its "supervisor" field set to TRUE, can perform privileged actions (e.g., simulation control, moving robots, recording videos) typically reserved for human operators. Written in any supported language, it has greater capabilities than standard controllers.</li>
</ul>
<p><span style="background-color: #ff99cc;"><strong><em>4.</em></strong>請列出上述文章中的重要的英文單字與解釋，以及出現在文句中的用法</span>：(<span style="background-color: #ccffcc;">41223131</span>)</p>
<p></p>
<p><span style="background-color: #ff99cc;"><strong><em>5.</em></strong>請詳細說明如何採手動方式在 Webots 建立下列場景</span>：(<span style="background-color: #ccffcc;">41223158</span>)</p>
<h4><span>步驟 1：創建新世界</span></h4>
<ol>
<li>
<p><strong>啟動 Webots</strong>：</p>
<ul>
<li>打開 Webots 軟體，並進入主介面。</li>
</ul>
</li>
<li>
<p><strong>創建新世界</strong>：</p>
<ul>
<li>在 Webots 的主畫面中，選擇<span> </span><code inline="">File</code><span> </span>&gt;<span> </span><code inline="">New World</code>，這會創建一個名為<span> </span><code inline="">untitled.wbt</code><span> </span>的新世界。</li>
<li>新創建的世界會有一個預設的地面，並且已經設定了一些基本參數。</li>
</ul>
</li>
</ol>
<h4><span>步驟 2：設置桌面結構</span></h4>
<ol>
<li>
<p><strong>新增桌子（Solid）</strong>：</p>
<ul>
<li>在<span> </span><code inline="">Scene Tree</code><span> </span>中，右鍵點選<span> </span><code inline="">WorldInfo</code><span> </span>節點，選擇<span> </span><code inline="">Add</code><span> </span>&gt;<span> </span><code inline="">Solid</code>，會在場景中新增一個<span> </span><code inline="">Solid</code><span> </span>節點。這個<span> </span><code inline="">Solid</code><span> </span>節點將代表你的桌子。</li>
</ul>
</li>
<li>
<p><strong>新增桌面的形狀（Shape）</strong>：</p>
<ul>
<li>在<span> </span><code inline="">Solid</code><span> </span>節點下，右鍵點選<span> </span><code inline="">Solid</code><span> </span>節點，選擇<span> </span><code inline="">Add</code><span> </span>&gt;<span> </span><code inline="">Shape</code><span> </span>&gt;<span> </span><code inline="">Box</code>。這將創建一個長方體來代表桌面。</li>
</ul>
</li>
<li>
<p><strong>設定桌子尺寸</strong>：</p>
<ul>
<li>點選<span> </span><code inline="">Box</code><span> </span>節點，然後在右側的屬性面板中設定<span> </span><code inline="">size</code><span> </span>參數來調整桌子的大小。假設我們的桌子尺寸是 2 米長，1 米寬，0.1 米高，設定如下：</li>
</ul>
<div>
<div class="syntaxhighlighter html" id="highlighter_976851">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="html plain">size 2 0.1 1</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
</li>
<li>
<p><strong>設置桌子的顏色</strong>：</p>
<ul>
<li>點選<span> </span><code inline="">Solid</code><span> </span>節點，右鍵選擇<span> </span><code inline="">Appearance</code>，然後設定材質的顏色。你可以選擇木色或其他顏色來模擬桌子表面。</li>
</ul>
</li>
</ol>
<h4><span>步驟 3：創建籃球框</span></h4>
<ol>
<li>
<p><strong>新增籃框（Solid）</strong>：</p>
<ul>
<li>在<span> </span><code inline="">Scene Tree</code><span> </span>中，右鍵點選<span> </span><code inline="">WorldInfo</code><span> </span>節點，選擇<span> </span><code inline="">Add</code><span> </span>&gt;<span> </span><code inline="">Solid</code>，再右鍵選擇新創建的<span> </span><code inline="">Solid</code><span> </span>節點，選擇<span> </span><code inline="">Add</code><span> </span>&gt;<span> </span><code inline="">Shape</code><span> </span>&gt;<span> </span><code inline="">Cylinder</code>。這將創建一個圓柱形的籃框。</li>
</ul>
</li>
<li>
<p><strong>設置籃框的大小與位置</strong>：</p>
<ul>
<li>點選<span> </span><code inline="">Cylinder</code><span> </span>節點，並在右側屬性面板中設定<span> </span><code inline="">radius</code><span> </span>和<span> </span><code inline="">height</code>。例如：</li>
</ul>
<div>
<div class="syntaxhighlighter html" id="highlighter_632874">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="html plain">radius 0.2</code></div>
<div class="line number2 index1 alt1"><code class="html plain">height 0.05</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<ul>
<li>設定<span> </span><code inline="">translation</code><span> </span>來調整籃框的位置。假設我們要把籃框放置在桌面上方，並放置在桌子的遠端。設定如下：</li>
</ul>
<div>
<div class="syntaxhighlighter html" id="highlighter_628963">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="html plain">translation 0 0.6 -0.5</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>這樣，籃框就會位於桌子的上方，距離桌面的高度為 0.6 米。</p>
</li>
</ol>
<h4><span>步驟 4：創建籃球</span></h4>
<ol>
<li>
<p><strong>新增籃球（Solid）</strong>：</p>
<ul>
<li>在<span> </span><code inline="">Scene Tree</code><span> </span>中，右鍵點選<span> </span><code inline="">WorldInfo</code><span> </span>節點，選擇<span> </span><code inline="">Add</code><span> </span>&gt;<span> </span><code inline="">Solid</code>，然後右鍵選擇新創建的<span> </span><code inline="">Solid</code><span> </span>節點，選擇<span> </span><code inline="">Add</code><span> </span>&gt;<span> </span><code inline="">Shape</code><span> </span>&gt;<span> </span><code inline="">Sphere</code>。這將創建一個球形的籃球。</li>
</ul>
</li>
<li>
<p><strong>設定籃球大小與顏色</strong>：</p>
<ul>
<li>點選<span> </span><code inline="">Sphere</code><span> </span>節點，在右側屬性面板中設定<span> </span><code inline="">radius</code>，例如將<span> </span><code inline="">radius</code><span> </span>設定為 0.1 米，代表籃球的直徑為 20 公分。</li>
</ul>
<div>
<div class="syntaxhighlighter html" id="highlighter_758629">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="html plain">radius 0.1</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<ul>
<li>設定顏色，為了讓籃球看起來像真實的籃球，可以選擇橙色。這樣籃球就會顯示為橙色。</li>
</ul>
</li>
<li>
<p><strong>設定籃球的位置</strong>：</p>
<ul>
<li>設定<span> </span><code inline="">translation</code>，將籃球放置於桌面上方，距離桌面大約 0.2 米。</li>
</ul>
<div>
<div class="syntaxhighlighter html" id="highlighter_365891">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="html plain">translation 0 0.2 -0.5</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
</li>
</ol>
<h4><span>步驟 5：設置物理屬性</span></h4>
<ol>
<li>
<h4><strong>設定桌子與籃框的物理屬性</strong>：</h4>
<ul>
<li>
<h4>桌子和籃框不需要太多的彈性，但需要摩擦力，這樣物體才能有真實的接觸效果。</h4>
</li>
</ul>
<h4>在<span> </span><code inline="">Solid</code><span> </span>節點中添加物理屬性設定：</h4>
<div>
<div class="syntaxhighlighter html" id="highlighter_830099">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="html plain">Physics { </code></div>
<div class="line number2 index1 alt1"><code class="html spaces">        </code><code class="html plain">density 1.0 </code></div>
<div class="line number3 index2 alt2"><code class="html spaces">        </code><code class="html plain">friction 0.9 </code></div>
<div class="line number4 index3 alt1"><code class="html spaces">        </code><code class="html plain">bounce 0.0 # 桌子和籃框不會反彈 </code></div>
<div class="line number5 index4 alt2"><code class="html plain">}</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<h4><br/><br/></h4>
</li>
<li>
<p><strong>設定籃球的物理屬性</strong>：</p>
<ul>
<li>籃球需要較高的彈性，以便它能夠反彈。可以設置以下屬性：</li>
</ul>
<div>
<div class="syntaxhighlighter html" id="highlighter_289004">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="html plain">Physics {</code></div>
<div class="line number2 index1 alt1"><code class="html spaces">    </code><code class="html plain">density 0.5</code></div>
<div class="line number3 index2 alt2"><code class="html spaces">    </code><code class="html plain">friction 0.3</code></div>
<div class="line number4 index3 alt1"><code class="html spaces">    </code><code class="html plain">bounce 0.7  # 籃球有較高的反彈</code></div>
<div class="line number5 index4 alt2"><code class="html plain">}</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
</li>
</ol>
<h4><span>步驟 6：創建控制器</span></h4>
<ol>
<li>
<h4><strong>創建 Python 控制器程式</strong>：</h4>
<ul>
<li>
<h4>在 Webots 中，你需要使用控制器來控制物體的行為，例如投籃等。創建一個新的 Python 控制器，並將其命名為<span> </span><code inline="">basketball_controller.py</code>。</h4>
</li>
</ul>
</li>
<li>
<p><strong>編寫控制器邏輯</strong>：</p>
<ul>
<li>控制器的主要目的是監控籃球的運動，並在籃球進入籃框時進行計分。下面是一個簡單的範例程式，會檢查籃球是否進入籃框範圍。</li>
<li>
<div>
<div class="syntaxhighlighter html" id="highlighter_160064">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
<div class="line number10 index9 alt1">10</div>
<div class="line number11 index10 alt2">11</div>
<div class="line number12 index11 alt1">12</div>
<div class="line number13 index12 alt2">13</div>
<div class="line number14 index13 alt1">14</div>
<div class="line number15 index14 alt2">15</div>
<div class="line number16 index15 alt1">16</div>
<div class="line number17 index16 alt2">17</div>
<div class="line number18 index17 alt1">18</div>
<div class="line number19 index18 alt2">19</div>
<div class="line number20 index19 alt1">20</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="html plain">範例程式碼：</code></div>
<div class="line number2 index1 alt1"> </div>
<div class="line number3 index2 alt2"><code class="html plain">from controller import Robot</code></div>
<div class="line number4 index3 alt1"> </div>
<div class="line number5 index4 alt2"><code class="html plain"># 創建 robot 物件來控制 Webots 模擬</code></div>
<div class="line number6 index5 alt1"><code class="html plain">robot = Robot()</code></div>
<div class="line number7 index6 alt2"><code class="html plain">timestep = int(robot.getBasicTimeStep())</code></div>
<div class="line number8 index7 alt1"> </div>
<div class="line number9 index8 alt2"><code class="html plain"># 獲取籃球的物體</code></div>
<div class="line number10 index9 alt1"><code class="html plain">ball = robot.getFromDef("BASKETBALL")</code></div>
<div class="line number11 index10 alt2"><code class="html plain">ball_position = ball.getPosition()</code></div>
<div class="line number12 index11 alt1"> </div>
<div class="line number13 index12 alt2"><code class="html plain"># 模擬循環</code></div>
<div class="line number14 index13 alt1"><code class="html plain">while robot.step(timestep) != -1:</code></div>
<div class="line number15 index14 alt2"><code class="html spaces">    </code><code class="html plain"># 更新籃球的位置</code></div>
<div class="line number16 index15 alt1"><code class="html spaces">    </code><code class="html plain">ball_position = ball.getPosition()</code></div>
<div class="line number17 index16 alt2"> </div>
<div class="line number18 index17 alt1"><code class="html spaces">    </code><code class="html plain"># 如果籃球進入籃框範圍，則顯示得分訊息</code></div>
<div class="line number19 index18 alt2"><code class="html spaces">    </code><code class="html plain">if ball_position[0] &gt; 0.5 and ball_position[0] &lt; </code><code class="html keyword">1.5</code> <code class="html plain">and ball_position[1] &gt; 0.5:</code></div>
<div class="line number20 index19 alt1"><code class="html spaces">        </code><code class="html plain">print("得分！")</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
</li>
</ul>
<p></p>
</li>
<li>
<p><strong>連接控制器與世界</strong>：</p>
<ul>
<li>在 Webots 中，點選<span> </span><code inline="">WorldInfo</code><span> </span>節點，在屬性面板中找到<span> </span><code inline="">controller</code><span> </span>屬性，並將其設置為剛創建的控制器程式名稱<span> </span><code inline="">basketball_controller.py</code>。</li>
</ul>
</li>
</ol>
<h4><span>步驟 7：測試與調整</span></h4>
<ol>
<li>
<p><strong>啟動模擬</strong>：</p>
<ul>
<li>點選 Webots 上方的<span> </span><code inline="">Play</code><span> </span>按鈕來啟動模擬。</li>
<li>你應該可以看到籃球在桌子上彈跳，並且控制器會檢測籃球是否進入籃框並顯示得分。</li>
</ul>
</li>
<li>
<p><strong>調整參數</strong>：</p>
<ul>
<li>如果籃球的反彈效果或運動不符合預期，可以調整物理屬性（例如彈性、摩擦力、質量）來改善模擬效果。</li>
</ul>
</li>
</ol>
<h4><span>步驟 8：保存與分享</span></h4>
<ol>
<li>
<p><strong>保存世界檔案</strong>：</p>
<ul>
<li>在 Webots 中，選擇<span> </span><code inline="">File</code><span> </span>&gt;<span> </span><code inline="">Save</code><span> </span>來保存你的<span> </span><code inline="">.wbt</code><span> </span>檔案。</li>
</ul>
</li>
<li>
<p><strong>分享模擬</strong>：</p>
<ul>
<li>你可以將<span> </span><code inline="">.wbt</code><span> </span>檔案和控制器程式（例如<span> </span><code inline="">basketball_controller.py</code>）一起分享，讓其他人可以使用這個模擬。</li>
</ul>
</li>
</ol>
<p><span style="background-color: #ff99cc;"><strong><em>6.</em></strong>希望可以手把手一步步說明該如何利用<strong>圖形介面 menu</strong> 建立這個場景，過程中有那些要點必須特別注意</span>？(<span style="background-color: #ccffcc;">41223118</span>)</p>
<div>
<div><strong>步驟 1</strong>：<strong>啟動 Webots 並創建新世界：</strong></div>
</div>
<div>
<div>開啟 Webots 後，點擊菜單欄的「File」&gt;「New World」<span style="background-color: #ccffcc;"><span style="background-color: #ccffcc;">(Ctrl+N)-(</span></span>創建一個空白的仿真世界，檔案副檔名為 <span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">.wbt)</span></div>
<div>
<div><span style="background-color: #ffff00;"><strong>要點</strong>：儲存時選擇一個容易找到的路徑，避免後續找不到檔案。</span></div>
<div>
<div><strong>步驊 2</strong>：添加桌面（地面）</div>
</div>
</div>
<div>
<div>     1.在場景樹（Scene Tree，左側）中，右鍵點擊頂層節點（預設為 <span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">WorldInfo</span>），選擇「Add Node」</div>
<div>     2.在節點選擇視窗中，展開「PROTO nodes (Webots Projects)」&gt;「objects」&gt;「floors」</div>
</div>
<div>     3.選擇 <span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">RectangleArena</span>，點擊「Add」</div>
<div>     4.在場景樹中點擊 <span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">RectangleArena</span>，右側屬性面板調整：</div>
<div>
<div><span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">         (a.)size</span>：設為 <span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">1 0.5</span>（長 1m，寬 0.5m，模擬桌面大小）</div>
<div>
<div><span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">         (b.)translation</span>：設為 <span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">0 0 0</span>（放在原點）</div>
<div>
<div><span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">         (c.)appearance</span>：點擊後選擇 <span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">PBRAppearance</span>，設置 <span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">baseColor</span> 為木頭色（如 <span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">0.6 0.3 0.1</span>）</div>
<div>
<div><span style="background-color: #ffff00;"><strong>要點</strong>：確保地面有 <span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">Physics</span> 節點（預設已有），以啟用物理互動</span></div>
<div>
<div><strong>步驟 3</strong>：添加籃框</div>
<div>
<div>     1.在場景樹中右鍵，選擇「Add Node」</div>
<div>
<div>     2.選擇 <span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">Base nodes</span> &gt; <span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">Solid</span>，命名為 <span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">BasketHoop</span></div>
<div>
<div>     3.為 <span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">BasketHoop</span> 添加子節點：</div>
<div>
<div>            (a.)右鍵 <span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">BasketHoop</span>，選擇「Add Node」&gt; <span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">Shape</span></div>
<div>
<div>            (b.)右鍵 <span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">Shape</span>，選擇「Add Node」&gt; <span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">Geometry</span> &gt; <span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">Cylinder</span></div>
<div>
<div>            (c.)調整 <span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">Cylinder</span> 屬性：</div>
<div>
<div><span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">                    (I) radius</span>：設為 <span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">0.1</span>（籃框半徑 10cm）</div>
<div>
<div><span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">                   (II) height</span>：設為 <span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">0.02</span>（籃框厚度 2cm）</div>
<div>
<div><span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">                  (III) subdivision</span>：設為 <span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">32</span>（圓滑度）</div>
</div>
</div>
</div>
<div>
<div>     4.在 <span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">Shape</span> 下添加 <span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">Appearance</span>，設為紅色（<span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">baseColor</span> 設為 <span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">1 0 0</span>）</div>
<div>
<div><span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">            (a.)translation</span>：設為 <span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">0.4 0 0.3</span>（桌面邊緣後方，高度 30cm）</div>
<div>
<div>     5.添加物理屬性：</div>
<div>
<div>            (a.)右鍵 <span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">BasketHoop</span>，選擇「Add Node」&gt; <span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">Physics</span>（確保固定不動）</div>
<div>
<div><span style="background-color: #ffff00;"><strong>要點</strong>：籃框應為靜態物體，避免被球撞動</span></div>
<div>
<div><strong>步驟 4</strong>：添加籃網（簡化版）</div>
<div>
<div>
<div>     1.在 <span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">BasketHoop</span> 下右鍵，選擇「Add Node」&gt; <span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">Shape</span></div>
<div>
<div>     2.添加 <span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">Geometry</span> &gt; <span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">Cone</span>，模擬籃網：</div>
<div>            (a.)<span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">bottomRadius</span>：設為 <span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">0.1</span>（與籃框相同）</div>
</div>
<div>            (b.)<span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">height</span>：設為 <span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">0.15</span>（網長 15cm）</div>
<div>            (c.)<span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">side</span>：設為 <span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">TRUE</span>，<span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">bottom</span> 設為 <span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">FALSE</span>（空心錐形）</div>
<div>     3.調整位置：</div>
<div>
<div><span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">            (a.)translation</span>：設為 <span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">0 0 -0.075</span>（錐形從籃框向下延伸）</div>
</div>
<div>     4.設置外觀：</div>
<div>            (a.)添加 <span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">Appearance</span>，<span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">baseColor</span> 設為白色（<span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">1 1 1</span>），<span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">transparency</span> 設為 <span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">0.5</span>（半透明網狀感）</div>
</div>
<div><span style="background-color: #ffff00;"><strong>要點</strong>：這裡簡化為錐形，實際網狀結構需更複雜的建模，若有需求可後續調整</span></div>
</div>
<div>
<div><strong>步驟 5</strong>：添加籃球</div>
<div>     1.在場景樹頂層右鍵，選擇「Add Node」&gt; <span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">Solid</span>，命名為 <span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">Basketball</span></div>
<div><span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn"><span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">     2.</span></span>添加子節點：</div>
<div>
<div>
<div><span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">            (a.)Shape</span> &gt; <span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">Geometry</span> &gt; <span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">Sphere</span>：</div>
<div>
<div><span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">                    (I)radius</span>：設為 <span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">0.03</span>（直徑約 6cm，小型籃球）</div>
</div>
<div><span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">            (b.)Appearance</span>：設為橙色（<span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">baseColor</span> 設為 <span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">1 0.5 0</span>）</div>
</div>
<div><span style="background-color: #ffff00;"><strong>要點</strong>：確保球有物理屬性，且位置不與桌面重疊，否則可能卡住</span></div>
</div>
<div>
<div><strong>步驟 6</strong>：添加投籃機制（簡化為槓桿）
<div>     1.在場景樹頂層右鍵，選擇「Add Node」&gt; <span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">Solid</span>，命名為 <span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">Launcher</span>
<div>     2.添加子節點：</div>
<div>
<div>
<div><span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">            (a.)Shape</span> &gt; <span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">Geometry</span> &gt; <span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">Box</span>：</div>
<div>
<div><span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">                    (I)size</span>：設為 <span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">0.2 0.05 0.01</span>（長 20cm，寬 5cm，厚 1cm）</div>
</div>
<div>
<div><span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">            (b.)Appearance</span>：設為灰色（<span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">baseColor</span> 設為 <span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">0.5 0.5 0.5</span>）</div>
</div>
     3.添加物理屬性：</div>
<div>
<div>            (a.)<span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">Physics</span> &gt; <span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">mass</span> 設為 <span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">0.2</span></div>
<div>     4.添加鉸鏈關節（模擬槓桿旋轉）：</div>
<div>
<div>
<div>            (a.)在場景樹頂層右鍵，選擇「Add Node」&gt; <span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">HingeJoint</span></div>
<div>
<div>            (b.)在 <span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">HingeJoint</span> 的 <span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">device</span> 中添加 <span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">RotationalMotor</span>，命名為 <span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">LauncherMotor</span></div>
<div>
<div>            (c.)設置 <span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">jointParameters</span></div>
<div><span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn"><span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">                    (I)</span></span><span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">anchor</span>：設為 <span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">-0.4 0 0</span>（鉸鏈固定在桌面前端）</div>
<div>                   (II)<span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">axis</span>：設為 <span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">0 1 0</span>（沿 Y 軸旋轉）</div>
<div>            (d.)將 <span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">Launcher</span> 拖入 <span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">HingeJoint</span> 的 <span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">endPoint</span> 欄位</div>
</div>
</div>
</div>
<div>     5.調整 <span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">Launcher</span> 位置：
<div><span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">            (a.)translation</span>：設為 <span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">-0.3 0 0.005</span>（與桌面接觸）</div>
</div>
</div>
</div>
</div>
</div>
</div>
<div>
<div><span style="background-color: #ffff00;"><strong>要點</strong>：確保槓桿與球初始位置對齊，後續需編寫控制器讓其旋轉</span></div>
</div>
<div>
<div><strong>步驟 7</strong>：設置光源與背景</div>
<div>
<div>     1.添加光源：</div>
<div>
<div>            (a.)場景樹右鍵，選擇「Add Node」&gt; <span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">PointLight</span></div>
<div>
<div><span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">            (b.)location</span>：設為 <span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">0 0 1</span>（桌面上方 1m）</div>
<div>
<div><span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">            (c.)intensity</span>：設為 <span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">1</span></div>
</div>
</div>
</div>
<div>
<div>     2.添加背景：</div>
<div><span><span>            (a.)</span></span>場景樹右鍵，選擇「Add Node」&gt; <span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">Background</span></div>
<div><span><span>            (b.)</span></span><span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">skyColor</span>：設為 <span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">0.5 0.5 1</span>（淺藍色天空）</div>
<div>
<div><span style="background-color: #ffff00;"><strong>要點</strong>：光源位置影響陰影效果，確保場景明亮可見</span></div>
</div>
</div>
</div>
<div>
<div><strong>步驟 8</strong>：保存與測試</div>
<div>
<div>     1.點擊「File」&gt;「Save World」</div>
<div>     2.按工具欄「Play」按鈕運行仿真</div>
<div>     3.觀察：</div>
<div>
<div>            (a.)球是否會因重力落在槓桿上</div>
<div>
<div>            (b.)籃框是否穩定</div>
</div>
<div><span style="background-color: #ffff00;"><strong>要點</strong>：若球卡住或場景異常，檢查物體的 <span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">translation</span> 是否重疊</span></div>
<div><hr/><span style="background-color: #ffff00;"></span></div>
<div>
<div><strong>特別注意的要點</strong></div>
<div>
<ul>
<li class="break-words"><strong>物理屬性</strong>：
<ul class="marker:text-secondary">
<li class="break-words">每個動態物體（如球、槓桿）必須有 <span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">Physics</span> 節點，否則不會受重力影響。</li>
<li class="break-words">靜態物體（如籃框）也需 <span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">Physics</span>，但質量設為 0 或不設值。</li>
</ul>
</li>
<li class="break-words"><strong>位置精確性</strong>：
<ul class="marker:text-secondary">
<li class="break-words">避免物體初始位置重疊，否則可能導致仿真崩潰或物體彈飛。</li>
<li class="break-words">使用屬性面板輸入精確數值，而非僅靠 3D 視圖拖曳。</li>
</ul>
</li>
<li class="break-words"><strong>關節與控制器</strong>：
<ul class="marker:text-secondary">
<li class="break-words">投籃槓桿需要控制器（Controller）驅動 <span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">RotationalMotor</span>，這部分需額外編寫程式碼（例如用 Python 或 C）。</li>
<li class="break-words">測試時可手動調整槓桿角度（<span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">position</span>），模擬投籃動作。</li>
</ul>
</li>
<li class="break-words"><strong>比例與單位</strong>：
<ul class="marker:text-secondary">
<li class="break-words">Webots 使用公尺作為單位，確保所有尺寸（如籃球半徑、桌面大小）符合現實比例。</li>
</ul>
</li>
<li class="break-words"><strong>性能優化</strong>：
<ul class="marker:text-secondary">
<li class="break-words">避免添加過多複雜節點（如高細分網格），以免仿真變慢。</li>
</ul>
</li>
</ul>
<div><strong>後續建議</strong></div>
<div>
<ul>
<li class="break-words"><strong>控制器編寫</strong>：為 <span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">LauncherMotor</span> 添加一個簡單控制器，讓槓桿按鍵觸發旋轉，模擬投籃。</li>
<li class="break-words"><strong>計分系統</strong>：添加 <span class="text-sm px-1 rounded-sm !font-mono bg-sunset/10 text-rust dark:bg-dawn/10 dark:text-dawn">TouchSensor</span> 到籃框，檢測球是否進籃。</li>
</ul>
<h3>webots</h3>
<p class="" data-end="168" data-start="93">一套<strong data-end="117" data-start="103">開源3D機器人模擬器</strong>，支援實時物理模擬與多種程式語言（Python、C/C++、Java），可快速開發與測試機器人演算法。</p>
<hr class="" data-end="173" data-start="170"/>
<p>⚙️ 技術資訊</p>
<p><span>結合了圖形用戶介面（基於 Qt 庫）、物理引擎（基於 Open Dynamics Engine 的分支）和 3D 渲染引擎（OpenGL 3.3）。它運行於 Windows、Linux 和 macOS。模擬可以導出為電影、互動 HTML 場景、動畫，甚至在線流式傳輸。機器人可以使用 C、C++、Python、Java、MATLAB 或 ROS 編程，使用簡單的 API 覆蓋所有基本的機器人需求。</span></p>
<ul data-end="357" data-start="188">
<li class="" data-end="218" data-start="188">
<p class="" data-end="218" data-start="190"><strong data-end="198" data-start="190">物理引擎</strong>：使用 ODE 模擬剛體、摩擦與碰撞</p>
</li>
<li class="" data-end="247" data-start="219">
<p class="" data-end="247" data-start="221"><strong data-end="230" data-start="221">感測器支援</strong>：攝影機、雷達、IMU、GPS</p>
</li>
<li class="" data-end="283" data-start="248">
<p class="" data-end="283" data-start="250"><strong data-end="257" data-start="250">跨平台</strong>：Windows / Linux / macOS</p>
</li>
<li class="" data-end="321" data-start="284">
<p class="" data-end="321" data-start="286"><strong data-end="294" data-start="286">語言支援</strong>：Python、C/C++、Java、MATLAB</p>
</li>
<li class="" data-end="357" data-start="322">
<p class="" data-end="357" data-start="324"><strong data-end="331" data-start="324">整合性</strong>：相容 ROS / ROS2，便於真實機器人部署</p>
</li>
</ul>
<hr class="" data-end="362" data-start="359"/>
<p>🌟 優勢與創新</p>
<ul data-end="490" data-start="378">
<li class="" data-end="396" data-start="378">
<p class="" data-end="396" data-start="380">高擬真環境，感測資料接近實機</p>
</li>
<li>高質量的免費開源技術，用於模擬機器人系統。</li>
<li class="" data-end="427" data-start="397">
<p class="" data-end="427" data-start="399">提供真實機器人模型（如 TurtleBot、NAO）</p>
</li>
<li>利用 Webots 用戶社區的貢獻，包括機器人、傳感器、執行器、物體、環境、基準測試、控制程序等模型。</li>
<li class="" data-end="445" data-start="428">
<p class="" data-end="445" data-start="430">支援 AI 與強化學習訓練</p>
</li>
<li class="" data-end="475" data-start="446">
<p class="" data-end="475" data-start="448">可動態控制模擬流程（Supervisor API）</p>
</li>
<li class="" data-end="490" data-start="476">
<p class="" data-end="490" data-start="478">免費且開源，擴充性強</p>
</li>
</ul>
<hr/>
<p>📚 初學者資源</p>
<ul data-end="1107" data-start="819">
<li class="" data-end="876" data-start="819">
<p class="" data-end="876" data-start="821">官方網站：<a class="" data-end="876" data-start="826" href="https://cyberbotics.com" rel="noopener" target="_new">https://cyberbotics.com</a></p>
</li>
<li class="" data-end="971" data-start="877">
<p class="" data-end="971" data-start="879">GitHub 原始碼與範例：<a class="" data-end="971" data-start="893" href="https://github.com/cyberbotics/webots" rel="noopener" target="_new">https://github.com/cyberbotics/webots</a></p>
</li>
<li class="" data-end="1031" data-start="972">
<p class="" data-end="1031" data-start="974">教學文檔：<a href="https://cyberbotics.com/doc/guide/index">Webots Documentation</a></p>
</li>
<li class="" data-end="1107" data-start="1032">
<p class="" data-end="1107" data-start="1034">YouTube 教學頻道：<a class="" data-end="1107" data-start="1047" href="https://www.youtube.com/c/Cyberbotics" rel="noopener" target="_new">Cyberbotics Channel</a></p>
</li>
</ul>
<h3>blender</h3>
<p><a href="https://docs.blender.org/manual/en/latest/">Manual</a>、</p>
<p>基本操作：</p>
<h4 class="" data-end="86" data-start="72">🖱️ 介面與控制</h4>
<ul data-end="148" data-start="87">
<li class="" data-end="106" data-start="87">
<p class="" data-end="106" data-start="89"><strong data-end="97" data-start="89">旋轉視角</strong>：中鍵滑鼠拖曳</p>
</li>
<li class="" data-end="132" data-start="107">
<p class="" data-end="132" data-start="109"><strong data-end="117" data-start="109">平移視角</strong>：Shift + 中鍵拖曳</p>
</li>
<li class="" data-end="148" data-start="133">
<p class="" data-end="148" data-start="135"><strong data-end="143" data-start="135">縮放視角</strong>：滾輪滑動</p>
</li>
</ul>
<hr class="" data-end="153" data-start="150"/>
<h4 class="" data-end="167" data-start="155">🔧 模型操作</h4>
<ul data-end="299" data-start="168">
<li class="" data-end="185" data-start="168">
<p class="" data-end="185" data-start="170"><strong data-end="178" data-start="170">選取物件</strong>：左鍵點擊</p>
</li>
<li class="" data-end="206" data-start="186">
<p class="" data-end="206" data-start="188"><strong data-end="194" data-start="188">移動</strong>：<code data-end="198" data-start="195">G</code>（Grab）</p>
</li>
<li class="" data-end="229" data-start="207">
<p class="" data-end="229" data-start="209"><strong data-end="215" data-start="209">旋轉</strong>：<code data-end="219" data-start="216">R</code>（Rotate）</p>
</li>
<li class="" data-end="251" data-start="230">
<p class="" data-end="251" data-start="232"><strong data-end="238" data-start="232">縮放</strong>：<code data-end="242" data-start="239">S</code>（Scale）</p>
</li>
<li class="" data-end="277" data-start="252">
<p class="" data-end="277" data-start="254"><strong data-end="262" data-start="254">確認操作</strong>：左鍵點一下或 Enter</p>
</li>
<li class="" data-end="299" data-start="278">
<p class="" data-end="299" data-start="280"><strong data-end="288" data-start="280">取消操作</strong>：右鍵點一下或 Esc</p>
</li>
</ul>
<hr class="" data-end="304" data-start="301"/>
<h4 class="" data-end="318" data-start="306">🧱 模式切換</h4>
<ul data-end="382" data-start="319">
<li class="" data-end="349" data-start="319">
<p class="" data-end="349" data-start="321"><strong data-end="336" data-start="321">Object Mode</strong>：物件層級操作（預設）</p>
</li>
<li class="" data-end="382" data-start="350">
<p class="" data-end="382" data-start="352"><strong data-end="365" data-start="352">Edit Mode</strong>：細部編輯（按 <code data-end="378" data-start="373">Tab</code> 切換）</p>
</li>
</ul>
<hr class="" data-end="387" data-start="384"/>
<h4 class="" data-end="403" data-start="389">📏 快捷鍵小技巧</h4>
<ul data-end="530" data-start="404">
<li class="" data-end="416" data-start="404">
<p class="" data-end="416" data-start="406"><code data-end="409" data-start="406">X</code>：刪除物件</p>
</li>
<li class="" data-end="442" data-start="417">
<p class="" data-end="442" data-start="419"><code data-end="430" data-start="419">Shift + A</code>：新增物件（Add）</p>
</li>
<li class="" data-end="486" data-start="443">
<p class="" data-end="486" data-start="445"><code data-end="455" data-start="445">Ctrl + Z</code> / <code data-end="476" data-start="458">Shift + Ctrl + Z</code>：復原 / 重做</p>
</li>
<li class="" data-end="530" data-start="487">
<p class="" data-end="530" data-start="489"><code data-end="503" data-start="489">NumPad 1/3/7</code>：前視 / 側視 / 上視（搭配 Ctrl 反向）</p>
</li>
</ul><h2>task6</h2>
<p><span>利用 Solvespace 繪製的 7 段顯示器零組件檔案： </span><a href="https://mdecd2025.github.io/hw-scrum-1/downloads/score_counter.7z">score_counter.7z</a></p>
<p><span>利用<span style="background-color: #ffff99;"> r、b、y、g 按鍵改變 7 段顯示器</span>中的 <span style="background-color: #ffff99;">f</span> 零件示範場景： </span><a href="https://mdecd2025.github.io/hw-scrum-1/downloads/7_segment_display.7z">7_segment_display.7z</a></p>
<p><span>執行結果如下：</span></p>
<h4>Webots Tutorial (HW3)</h4>
<p>1. 啟動 Webots 串流模式：</p>
<p>   使用以下指令開啟 Webots 並啟用串流伺服器：</p>
<div>
<div class="syntaxhighlighter py" id="highlighter_781547">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="py plain">webotsw </code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py plain">stream</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>2.   <strong data-end="163" data-start="154">預設埠號：</strong><span> </span><code data-end="170" data-start="164">1234</code><br data-end="173" data-start="170"/>     使用瀏覽器連線至：</p>
<p></p>
<ul>
<li class="" data-end="222" data-start="191">
<p class="" data-end="222" data-start="193">本地端：<code data-end="220" data-start="197">http://localhost:1234</code></p>
</li>
<li class="" data-end="263" data-start="226">
<p class="" data-end="263" data-start="228">遠端機器：<code data-end="263" data-start="233">http://stream_server_ip:1234</code></p>
</li>
</ul>
<p><code data-end="263" data-start="233">3. <strong data-end="278" data-start="268">建議瀏覽器：</strong><br data-end="281" data-start="278"/><strong data-end="306" data-start="284">    Windows 環境下使用 Edge</strong>，相容性較佳（支援 WebGL2）</code></p>
<p><code data-end="263" data-start="233">4. </code>顯示投籃成績（Scoreboard / 計時器）</p>
<h4 class="" data-end="374" data-start="364"> a. 近端檢視：</h4>
<ul data-end="442" data-start="375">
<li class="" data-end="404" data-start="375">
<p class="" data-end="404" data-start="377">利用 Webots<span> </span><code data-end="396" data-start="387">display</code><span> </span>元件展示數字。</p>
</li>
<li class="" data-end="442" data-start="405">
<p class="" data-end="442" data-start="407"><strong data-end="414" data-start="407">限制：</strong><span> </span>僅在本機 Webots 視窗中可見，無法透過串流顯示。</p>
</li>
</ul>
<h4 class="" data-end="464" data-start="444"> b. 串流顯示（7 段顯示器實作）：</h4>
<ol data-end="795" data-start="465">
<li class="" data-end="528" data-start="465">
<p class="" data-end="528" data-start="468"><strong data-end="477" data-start="468">建模工具：</strong><span> </span>使用 Solvespace 繪製的 7 段顯示器模型（檔案：<code data-end="526" data-start="508">score_counter.7z</code>）。</p>
</li>
<li class="" data-end="625" data-start="530">
<p class="" data-end="542" data-start="533"><strong data-end="542" data-start="533">匯入模型：</strong></p>
<ul data-end="625" data-start="546">
<li class="" data-end="590" data-start="546">
<p class="" data-end="590" data-start="548">在 Webots 中插入一個<span> </span><code data-end="570" data-start="563">Solid</code><span> </span>→<span> </span><code data-end="580" data-start="573">Shape</code><span> </span>→<span> </span><code data-end="589" data-start="583">Mesh</code>。</p>
</li>
<li class="" data-end="625" data-start="594">
<p class="" data-end="625" data-start="596"><code data-end="601" data-start="596">url</code><span> </span>指向各段（a ~ g）的<span> </span><code data-end="621" data-start="615">.obj</code><span> </span>檔案。</p>
</li>
</ul>
</li>
<li class="" data-end="728" data-start="627">
<p class="" data-end="641" data-start="630"><strong data-end="641" data-start="630">變色顯示數字：</strong></p>
<ul data-end="728" data-start="645">
<li class="" data-end="697" data-start="645">
<p class="" data-end="697" data-start="647">使用<span> </span><strong data-end="667" data-start="650">controller 程式</strong><span> </span>來變更 Mesh 段的顏色（開：紅色／亮；關：灰色／暗）。</p>
</li>
<li class="" data-end="728" data-start="701">
<p class="" data-end="728" data-start="703">每個數字由不同段（a-g）組成，模擬數字顯示效果。</p>
</li>
</ul>
</li>
<li class="" data-end="795" data-start="730">
<p class="" data-end="754" data-start="733"><strong data-end="754" data-start="733">使用 Supervisor 模式：</strong></p>
<ul data-end="795" data-start="758">
<li class="" data-end="795" data-start="758">
<p class="" data-end="795" data-start="760">可程式化操控每個 Mesh 的外觀（顏色控制、數字變換、倒數計時等）。</p>
</li>
</ul>
</li>
</ol><h1>Homework</h1>
<p>作業 (30%)</p>
<p>HW1 (5%): <span style="background-color: #ffff00;">建立由 Box 組成的平面四連桿機構 Webots 模擬場景</span></p>
<p style="padding-left: 30px;">part1:</p>
<p style="padding-left: 60px;">請各學員在 USB 隨身碟或個人電腦上完成 cd2025 課程所需的可攜系統配置:</p>
<p style="padding-left: 90px;">下載 <a href="http://229.cycu.org/portable_wcm2025.7z">portable_wcm2025.7z</a> (330MB, 解開壓縮後 1.4GB)</p>
<p style="padding-left: 90px;"><a href="http://229.cycu.org/Webots_2025a.7z">Webots_2025a.7z</a> (1.5 GB, 解開後約為 2.9GB, 可單獨運作)</p>
<p style="padding-left: 90px;"><a href="http://229.cycu.org/Webots_2025a_web.7z">Webots_2025a_web.7z</a> (171 MB, 解開壓縮後約為 1GB, 必須連網運作)</p>
<p style="padding-left: 90px;"><a href="http://229.cycu.org/Blender4.2.7z">Blender4.2.7z</a></p>
<p style="padding-left: 30px;">part2:</p>
<p style="padding-left: 60px;">請各學員完成可攜程式系統配置後, 利用 Webots R2025a 中寬度與高度都為 0.1m 的 box 物件建立一個簡單的平面四連桿機構模擬場景.</p>
<p style="padding-left: 60px;">base (基座) 長度 1m, link1 長度 0.4m, link2 長度 0.6m, link3 長度 0.9m, 各轉軸均為 HingeJoint, joint1 旋轉速度設定為 1radian/sec.</p>
<p style="padding-left: 30px;">part3:</p>
<p style="padding-left: 60px;">模擬場景啟動後, 按下 s 鍵機構開始作動, 按下 p 鍵後機構暫停.</p>
<p style="padding-left: 30px;">參考資料:</p>
<p style="padding-left: 60px;"><a href="/downloads/cd2025_hw1_demo.7z">cd2025_hw1_demo.7z</a></p>
<p>HW2 (5%): <span style="background-color: #ffff00;">建立由 CAD 繪製零件組成的平面四連桿機構 Webots 模擬場景</span></p>
<p style="padding-left: 30px;">各學員請利用 CAD 系統依據 HW1 的連桿尺寸與運動方式, 配置適當大小的旋轉軸以及基座後, 利用 Webots R2025a 完成一個簡單的平面四連桿機構模擬場景.</p>
<p style="padding-left: 30px;">參考資料:</p>
<p style="padding-left: 60px;"><a href="/downloads/fourbar_slvs.7z">fourbar_slvs.7z</a></p>
<p>HW3 (20%):<span style="background-color: #ffff00;">建立 Webots 桌上籃球遊戲機模擬系統</span></p>
<p style="padding-left: 30px;">請各分組利用CAD 系統建立一個能在電腦桌 (1600W X 700D X 740H mm) 上運作的投籃機構 (<a href="https://www.youtube.com/watch?v=LloG_Jn_TI0&amp;t=51s">參考影片</a>)後, 導入 Webots R2025a 套件, 建立一個能由使用者透過鍵盤按鍵操作, 且具備計分板的籃球遊戲機模擬系統.</p>
<p style="padding-left: 30px;">參考資料:</p>
<p>參考資料:</p>
<p style="padding-left: 30px;"><a href="/downloads/fourbar_ball_throwing_linkage.slvs">fourbar_ball_throwing_linkage.slvs</a></p>
<p style="padding-left: 30px;"><a href="/downloads/sixbar_ball_throwing_linkage.slvs">sixbar_ball_throwing_linkage.slvs</a></p>
<p style="padding-left: 30px;"><img alt="" height="264" src="/images/fourbar_ball_throwing_linkage.gif" width="400"/></p>
<h2>HW1</h2>
<p>HW1 (5%): <span style="background-color: #ffff00;">建立由 Box 組成的平面四連桿機構 Webots 模擬場景</span></p>
<p>操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 HW1 - 學員學號</p>
<hr/>
<p>題目要求尺寸：<span>利用 box 幾何外形節點建立平面四連桿機構的模擬場景，要求地面<span style="background-color: #ffff00;">固定桿長度 1m</span>，<span style="background-color: #ffff00;">寬高各為 0.1m</span>，<span style="background-color: #ffff00;">第一桿長度 0.4m</span>，<span style="background-color: #ffff00;">第二桿長度 0.6m</span>，<span style="background-color: #ffff00;">第三桿長度 0.9m</span>。</span></p>
<p><span><a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/41223118_nfu_edu_tw/ERQte6pGh7lGsShWUkh0nigBK6ikf2hC_PZrVHM2kcFrmg?e=5VPxuk">41223118-fourbar_box-w8.7z</a></span></p>
<p><span>這個版本還存在問題，三個webost檔案中link4腳還不能與base銜接。</span></p>
<hr/>
<p>理解問題所在後，修正版本檔案及影片：</p>
<p><a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/41223118_nfu_edu_tw/EZoglObR_iFOtUABhL-XmdMBSbcHfTTvY_YISISjiXOkxw?e=h1EOFA">41223118-fourbar_box-w9.7z</a></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/XunWtvQ2Yc0?si=zD2d2jbrkSdiFce4" title="YouTube video player" width="560"></iframe></p>
<p>心得：</p>
<p>總的來說這個應該是初次操作webots來最難的題目，我個人認為的難點：</p>
<ol>
<li>需了解自己在設計時叫出的box其最後節點位置和其旋轉的rad方向</li>
<li>在連接joint-link的節點問題時須清楚理解其是相對指向於誰的</li>
</ol>
<p>在製作過程中其實也有一個疑問就是問甚麼不能就joint1-4這樣的順序直接銜接，為什麼一定要最後joint4參照指向link3，最後與導師討論後得知是可行的，只要在最後將joint4的參照選擇指向<span style="background-color: #ffff99;">static_environment<span style="background-color: #ffffff;">，這個特殊定義值。</span></span></p><h2>HW2</h2>
<p>HW2 (5%): <span style="background-color: #ffff00;">建立由 CAD 繪製零件組成的平面四連桿機構 Webots 模擬場景</span></p>
<p>操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 HW2 - 學員學號</p>
<hr/>
<p>從<a href="https://mdecd2025.github.io/hw-zhe41223118/content/task3.html">task3</a>，繪製好的連桿以程式切割後導入webots組配模擬。(如果使用舊版本可攜程式需 <span style="background-color: #ccffcc;">pip install numpy</span> 安裝<a href="https://medium.com/@chiukevin08/numpy%E4%BB%8B%E7%B4%B9-61eb7f288b8d">NumPy</a> 套件，否則程式將如法執行)</p>
<p>檔案內包含了：1.原始檔(使用<span>cadshape</span>)、2.使用<span>shape</span>上色檔、3.前兩項都是指向link3，第三檔案為末端指向<span>static_environment</span></p>
<p><span></span></p>
<p>檔案：</p>
<p><a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/41223118_nfu_edu_tw/ER4W2mnCl35Bq4JsHzhoSXABKtOeyi3Qb7hpn_3c0oGRYQ?e=IvaXJF">41223118-fourbar-w10.7z</a></p>
<p>影片:</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/ps2iPS0MjOU?si=PXuwzodSV7uMNlbe" title="YouTube video player" width="560"></iframe></p>
<p>心得：</p>
<p>原本使用方式是將檔案轉為 stl 後轉入Blend後轉出obj，但後面有與導師詢問得知在<a href="https://mdecd2025.github.io/hw-scrum-1/content/w7.html">w7</a>週時導師有在隔壁班級提到的程式切割的方式，的確這樣方式完全比在Blend轉出方便，因為在用原本方式時發現，Blend導出的檔案再導入webots時，零件的位置是錯亂的，需在自行手動調整位置，這樣就變成跟HW1一樣難度，但這個部分說到底還是因為未去仔細查看課網站內容的疏失。</p><h2>HW3</h2>
<p>HW3 (20%):<span style="background-color: #ffff00;">建立 Webots 桌上籃球遊戲機模擬系統</span></p>
<p>操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 HW3 - 學員學號</p>
<hr/>
<p>檔案：<a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/41223118_nfu_edu_tw/Ecu9WT3NN2JHg5UozPC0h2cBVUgcKaKWdViFZqoKjjRoJQ?e=pGSafU">41223118-HW3.7z</a></p>
<p>影片：</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/Wl1di3FtM7Q?si=N2op_vGCzeee7wgn" title="YouTube video player" width="560"></iframe></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/jCHn3bjzd7o?si=eLOEmqKrP-eYmf8v" title="YouTube video player" width="560"></iframe></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/GjF6bjojKh0?si=X9rj3goUehi_AZaE" title="YouTube video player" width="560"></iframe></p>
<p><a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/41223118_nfu_edu_tw/EV8L_VJ4rbtOst4JbpIBFQMBANSpZsoBCYUIyUIi_j5h8A?e=PU750u">41223118-HW3-w13.7z</a></p>
<p>心得：</p>
<p>投籃機製作在導入webots做物件定義時，發現犯了一個很大的錯誤，就是一開始在組配時未將投籃機定義原點，導致導入時工件的原點是有誤差的，這最後造成的結果就是在作動時定義節點都是錯位的，造成工件解體，因為又是參考網站提供檔案下繪製組裝的，所以有些座標位置其實小數點後好幾位，在計算和修改其零件位置，又耗費了許多時間，不過我認為其收穫還是不少的，其中在上述影片中為展示出來，但其下載檔案裡已經有繪製了一個以課程網站內容<a href="https://mde.tw/cd2025/content/Tutorial6.html">Tutorial6</a> ，下繪製了一簡單的四輪車，計畫是將其與投球機跟籃框結合，程式也已經編寫好了，最後期望想達到結果就是能分別以兩組按鍵來控制籃框移動及投球機移動加手動投球。<span style="background-color: #ccffcc;">(時間足夠的話想在把紅外線計分跟七段顯示器加入)</span></p><h1>Midterm</h1>
<p>本課程所繳交的期中成績為學員自評之學習期望成績.</p>
<p>期中考週的自評期望成績繳交流程:</p>
<ol>
<li>整理先前所完成的各週的進度、作業網頁內容以及心得</li>
<li>拍攝期中自評影片, 上傳至 Youtube 後, 以"<span style="background-color: #ffff00;">國立虎尾科技大學 - 機械設計工程系 - cd2025 期中自評- 學員學號</span>"為影片標題後嵌入本頁面中</li>
<li>回填期中自評表單</li>
<li>上傳學員期中成績</li>
</ol>
<p>各週進度：從<a href="https://mdecd2025.github.io/hw-zhe41223118/content/w1.html">這個</a>目錄開始每週課程內容整理。</p>
<p>各週網頁內容：</p>
<p>第一週至第三週為使用可攜環境和配合python程式來分類課程分組名單</p>
<p>第四週至第五週為如何設定個人的IPV6網址及IPV6網路以.bat快速設定 (雖在這段時間也有接觸webots但只是些許理解還未實際操作)</p>
<p>第六週至現在第九週為webots連桿及模擬為主 (還有部分solvespace及Blender應用內容)</p>
<p>期中心得：</p>
<p>本學期課程內容可以說是重中之重，在前幾週還好，可攜、python應用，在前幾次的課程上也有了一些基礎，所以在處理上問題不多，可能重是重在後面教到的webots，這個軟體對於一些學長來說也是沒碰過的更何況我們，在摸索上真的到現在感覺連他的皮毛都還沒摸到，雖然有官網教學及問GTP輔助學習，但我覺得在學習上還是要以圖案或影片來輔助教學，真的單靠文字去理解，就我覺得來說學會的速度會很慢，不巧網上也沒有課程所教學的內容影片，又剛好本班因連假少上兩次課程，缺失的機會就只能靠各自回去自行摸索了。</p>
<p>期中自評影片：</p>
<p><span style="background-color: #ccffcc;">(自評分數為：70，分析內容已打至影片資訊欄，webots為課程之重要核心，認為到現在還未將其熟練及製作出要求的完整結果，所以覺得如果其餘內容都做得完整，但就到期中而言，只能做到這樣很不滿意，所以認為如果能拿高分，在期中自評上只能得70。)</span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/-wqNBy57K30?si=CTYmiASgoApqfbd1" title="YouTube video player" width="560"></iframe></p>
<p></p>
<p style="padding-left: 30px;"></p><h1>Exam</h1>
<p>Exam1 (10%): 建立 Webots 基本物件模擬場景</p>
<p style="padding-left: 30px;">各學員利用 Webots R2025a 套件中的 Shape 物件, 隨堂建立指定的機電系統模擬場景, 並利用 Python 程式進行互動控制.</p>
<p>Exam2 (10%): 利用 CAD 零組件建立模擬場景 </p>
<p style="padding-left: 30px;">各學員利用 CAD (Solvespace 與 NX2312), 隨堂建立指定的系統模型零組件後, 導入 Webots R2025a 後, 建立機電系統模擬場景, 並利用 Python 程式進行互動控制.</p>
<p>Exam3 (20%): Webots 機電模擬場景的協同設計</p>
<p style="padding-left: 30px;">各分組利用 CAD (Solvespace 與 NX2312), 隨堂建立指定的系統模型零組件後, 導入 Webots R2025a 後, 建立機電系統模擬場景, 並利用 Python 程式進行互動控制. 過程中各學員必須採同步協同模式, 維護從 Github Classroom 取得的分組協同倉儲以及網站.</p>
<p style="padding-left: 30px;">協同分組方式:</p>
<ol>
<li>分配學員負責利用 Solvespace 建立系統零組件, 過程中必須將所建構之零組件檔案與繪圖過程影片上傳至分組網頁.</li>
<li>分配學員負責利用 NX2312 建立系統零組件, 過程中必須將所建構之零組件檔案與繪圖過程影片上傳至分組網頁.</li>
<li>分配學員負責利用 Webots 建立機電系統模擬場景, 並利用 Python 程式進行控制, 過程中必須將建構過程拍成帶有說明字幕的影片上傳至分組網頁.</li>
</ol>
<h2>Exam1</h2>
<p>Exam1 (10%): <span>直接利用 Webots 中的 box 節點建立以下四連桿機構的運動模擬</span></p>
<p>題目：建立<span><span style="background-color: #ffff99;">紅色連桿為主動</span>旋轉，<span style="background-color: #ffff99;">旋轉速度設為 1.0 rad/s</span>，紅色連桿長度為 <span style="background-color: #ffff99;">0.4m</span>，綠色連桿長度為 <span style="background-color: #ffff99;">0.6m</span> (在位於桿件中央<span style="background-color: #ffff99;">延伸一與基座長桿重疊的短桿</span>，長度為 <span style="background-color: #ffff99;">0.3m</span>)，藍色連桿長度為 <span style="background-color: #ffff99;">0.9m</span>，紅色連桿與藍色連桿<span style="background-color: #ffff99;">距離 1m</span>，連桿機構。</span></p>
<p><span>要求1.：利用 Solvespace 繪製當紅色連桿旋轉角度為<span style="background-color: #ffff99;">個人學號最後兩碼</span> (單位為 degree) 的線架構圖，並將此角度作為四連桿的起始旋轉角度。</span></p>
<p><span>要求2.：操作影片標題：<span style="background-color: #ffff99;">國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam1 - 學員學號</span>，回傳至指定表單，並在個人作業倉儲中以 Exam1 頁面紀錄相關過程與心得。</span></p>
<hr/>
<p>檔案：<a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/41223118_nfu_edu_tw/EViaQrn8m8NHt4pbn1iHoiIBDs8CgWrMpizQvZk3u8gNxw?e=LEKcSv">41223118-Exam1.7z</a></p>
<p>影片：</p>
<p></p>
<p>心得：有了HW1的練習經驗，題目也說明了可以利用<span><span style="background-color: #ffff99;">Solvespace</span>等繪圖軟體來事先繪製好連桿後，在<a href="https://mdecd2025.github.io/hw-scrum-1/content/w7.html">w7</a>週提到的利用程式切割好配合Blend來在webots中一一組立，好處是甚麼，就是不用再像HW1那樣一個個建立還要去算其的角度和在事先繪製好的立體圖上也可回到繪製的草圖上輕鬆找出每個節點位置<span style="background-color: #ccffcc;">(只要繪製時有定位好原點的話基本上就是依坐標系去填寫節點位置)</span>，總體來說HW1雖然真的難了點，但能理解HW1的話，再來做Exam1甚至Exam2，都可以很得心順手。</span></p><h2>Exam2</h2>
<p>Exam2 (10%): 利用 CAD 零組件建立模擬場景</p>
<p><span>自行選擇 CAD 套件繪製平面四連桿機構，之後轉入 Webots 後建立<span style="background-color: #ffff99;">以短桿轉速 1 rad/s 旋轉</span>的動態模擬系統</span></p>
<p><span><span style="background-color: #ffff99;">左側最短桿</span>為<span style="background-color: #ffff99;">主動旋轉</span>，長度請<span style="background-color: #ffff99;">依照個人學號的最後兩碼</span>作為依據，設為 1.xx m，其餘自訂，主動桿的<span style="background-color: #ffff99;">起始旋轉角度</span> angle，也請以個人學號的<span style="background-color: #ffff99;">最後兩碼</span>作為依據，單位為 degree。</span></p>
<p>操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam2 - 學員學號</p>
<p><span style="background-color: #ccffcc;">需有各連桿的製作流程，其中包括 CAD 繪製與 Webots 模擬場景的設定與操作流程</span></p>
<hr/>
<p>檔案：</p>
<p>影片：</p>
<p></p>
<p>心得：</p><h2>Exam3</h2>
<p>Exam3 (20%): Webots 機電模擬場景的協同設計</p>
<ol>
<li>利用在 <a href="https://mde.tw/cd2025/content/IPv6.html">https://mde.tw/cd2025/content/IPv6.html</a> 中所分配的個人 IPv6 網址，以 webotsw --stream 啟動個人所完成的 HW1 模擬系統，並在其餘組員的電腦上，以瀏覽器<span style="background-color: #ffff00;">檢視啟動串流學員伺服器上的機構模擬</span>。</li>
<li><span>利用 <a href="https://mdecd2025.github.io/hw-scrum-1/downloads/three_digit_counter.7z">three_digit_counter.7z</a> 中的七段顯示器進行修改，以 webotsw --stream 啟動後，可在其餘組員的電腦中，透過瀏覽器<span style="background-color: #ffff00;">檢視參與協同組員 Webots 中所展示的學員學號</span>。</span></li>
<li><span>利用 <a href="https://mde.tw/cd2025/downloads/youbot_cart_w10_websocket.7z">youbot_cart_w10_websocket.7z</a> 中的 Youbot 底座平台，由各組組長以 webotsw --stream 啟動後，可在其餘組員的電腦中，<span style="background-color: #ffff00;">透過 Websocket 客戶端程式控制平台車的前進、後退與左右轉</span>。</span></li>
</ol>
<p>上述操作完成後<span>完成後請將操作與設定說明過程拍成影片分別以：</span></p>
<p><span>國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam3-1 - 學員學號</span></p>
<p><span>國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam3-2 - 學員學號</span></p>
<p><span>國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam3-3 - 學員學號</span></p>
<p><span>完成的影片與心得整理在個人作業網站中的 Exam3 頁面，並利用組員的帳號權限，將<span style="background-color: #ffff00;">個人心得</span>與上述<span style="background-color: #ffff00;">操作影片</span>，<span style="background-color: #ffff00;">統一放入分組網站中的 Exam3 頁面</span>中。</span></p>
<hr/>
<p>檔案：</p>
<p>影片：</p>
<p>心得：</p><h1>Final</h1>
<p><span>期末協同專案執行過程影片、簡報與 PDf 報告檔案 (六人一組) (30%)</span></p>
<p><span>題目: <span style="background-color: #ccffcc;">Webots 動態投籃模擬系統的協同設計</span></span></p>
<p><span>說明: </span></p>
<p style="padding-left: 30px;"><span>籃框架被配置在一定範圍內, 可隨機慢速前進、後退及左右擺動, 投籃機構系統帶有一定數量的籃球, 被配置在可自由移動的輪車上.</span></p>
<p style="padding-left: 30px;"><span>操作者可利用鍵盤特定按鍵控制投籃輪車的移動並發射投籃, 每投出一球後系統透過記分板進行計分, 並由送球機構進行補球或移動輪車取球, 遊戲可進行至全部數量籃球投完為止.</span></p>
<p>請將期末協同專案執行過程、內容與心得, 製作成影片，配合字幕上傳至 Youtube 後嵌入各階段的期末報告頁面中.</p>
<p>影片標題: <span style="background-color: #ffff00;">國立虎尾科技大學 - 機械設計工程系 - cd2025 期末報告 - 學員學號 - 各階段影片主題<br/></span></p>
<h1>Brython</h1>
<p><button id="add1to100">1 add to 100</button></p>
<!-- 導入 brython 程式庫 -->
<p>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
</p>
<!-- 啟動 Brython -->
<p>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
</p>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="/static/Cango-24v03-min.js"></script>
<script src="/static/gearUtils-09.js"></script>
<script src="/static/SVGpathUtils-6v03-min.js"></script>
<script src="/static/sylvester.js"></script>
<script src="/static/PrairieDraw.js"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
</p>
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "add1to100" 的按鈕點按時, 執行 add 方法
doc["add1to100"].bind('click', add)
</script>
</p>
<p><!-- add 1 to 100 結束--></p>
<!-- editor1 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div1"></div>
<!-- editor1 結束 --><hr/><!-- ########################################## -->
<p>從 1 累加到 100 part2:</p>
<p><button id="add1to100part2">1 add to 100</button><button id="cango_three_gears">cango_three_gears</button><button id="bsnake">BSnake</button><button id="aitetris">AI Tetris</button></p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()
Ace3 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run2():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src2"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace3.editor.setValue(prog)
    Ace3.editor.scrollToRow(0)
    Ace3.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace3.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run2'].bind('click', Ace3.run)
doc['kw_show_console2'].bind('click', Ace3.show_console)
doc['kw_clear_console2'].bind('click', Ace3.clear_console)
doc['clear_bd2'].bind('click', clear_bd2)
# 呼叫函式執行
run2()
</script>
</p>
<p><!-- add 1 to 100 part2 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace4 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )

# 透過 Ace4 以類別建立一個通用的 button2, 可以在多個案例中將 gist 程導入編輯區

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace4.editor.setValue(open(self.url).read())
        Ace4.editor.scrollToRow(0)
        Ace4.editor.gotoLine(0)
        Ace4.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add2(ev):
    Ace4.editor.setValue(add_src)
    Ace4.editor.scrollToRow(0)
    Ace4.editor.gotoLine(0)
    Ace4.run()

# id 為 "add1to100part2" 的按鈕點按時, 執行 add 方法
doc["add1to100part2"].bind('click', add2)
# 以下為運用 button2 class 的通用 gist 程式導入區
################################## cango_three_gears start
cango_three_gears_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/cango_three_gears_brython_div2.py"
cango_three_gears = button2(cango_three_gears_url)
doc["cango_three_gears"].bind("click", cango_three_gears.do)
################################## cango_three_gears end
################################## bsnake start
bsnake_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/kmol_snakey.py"
bsnake = button2(bsnake_url)
doc["bsnake"].bind("click", bsnake.do)
################################## bsnake end
################################## aitetris start
aitetris_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/pygame_to_brython_tetris_ai.py"
aitetris = button2(aitetris_url)
doc["aitetris"].bind("click", aitetris.do)
################################## aitetris end
</script>
</p>
<p><!-- add 1 to 100 part2 結束--></p>
<!-- editor2 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor2" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename2" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src2', 'kw_filename2');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run2">Run</button> <button id="kw_show_console2">Output</button> <button id="kw_clear_console2">清除輸出區</button><button id="clear_bd2">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console2"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div2"></div>
<!-- editor2 結束 --><hr/>
<p>
<script src="https://unpkg.com/three@0.144.0/build/three.js" type="text/javascript"></script>
</p></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div>